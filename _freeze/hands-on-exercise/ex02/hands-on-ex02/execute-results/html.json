{
  "hash": "fb92169fac0b90a5ddd66d03a0f6fa36",
  "result": {
    "markdown": "---\ntitle: \"Exercise 2 'Thematic Mapping and GeoVisualisation with R'\"\nauthor: \"Heng Kuan Xin\"\ndate: 2024-08-21\ndate-modified: 2024-08-21\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n  output: false\n---\n\n\n(Copied from Exercise) Overview: \n\nIn general, thematic mapping involves the use of map symbols to visualize selected properties of geographic features that are not naturally visible, such as population, temperature, crime rate, and property prices, just to mention a few of them.\n\nGeovisualisation, on the other hand, works by providing graphical ideation to render a place, a phenomenon or a process visible, enabling human’s most powerful information-processing abilities – those of spatial cognition associated with our eye–brain vision system – to be directly brought to bear.\n\nIn this chapter, you will learn how to plot functional and truthful choropleth maps by using an R package called **tmap** package.\n\n### 1 Import packages\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse, tmap)\n```\n:::\n\n\n### 2 Import data\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(\n  dsn=\"data/geospatial/MasterPlan2014SubzoneBoundaryWebSHP\",\n  layer=\"MP14_SUBZONE_WEB_PL\")\n\n# mpsz\n\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020/respopagesextod2011to2020.csv\", show_col_types = FALSE)\n\n# popdata\n```\n:::\n\n\n### 3 Data Preparation\n\n------------------------------------------------------------------------\n\n#### Create Data Table for Year 2020\n\nAim: Create a data table for year 2020 values, containing columns PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, and DEPENDENCY.\n\nDerive values for:\n\n-   YOUNG: age group 0 to 4 until age groyup 20 to 24,\n-   ECONOMY ACTIVE: age group 25-29 until age group 60-64,\n-   AGED: age group 65 and above,\n-   TOTAL: all age group, and\n-   DEPENDENCY: the ratio between young and aged against economy active group\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2020 <- popdata %>%\n  filter(Time==2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\npopdata2020\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 332 × 7\n   PA         SZ                   YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n   <chr>      <chr>                <dbl>            <dbl> <dbl> <dbl>      <dbl>\n 1 Ang Mo Kio Ang Mo Kio Town Cen…  1440             2610   760  4810      0.843\n 2 Ang Mo Kio Cheng San             6640            15460  6050 28150      0.821\n 3 Ang Mo Kio Chong Boon            6150            13950  6470 26570      0.905\n 4 Ang Mo Kio Kebun Bahru           5540            12090  5120 22750      0.882\n 5 Ang Mo Kio Sembawang Hills       2100             3410  1310  6820      1    \n 6 Ang Mo Kio Shangri-La            3960             8420  3610 15990      0.899\n 7 Ang Mo Kio Tagore                2220             4200  1530  7950      0.893\n 8 Ang Mo Kio Townsville            4690            11450  5100 21240      0.855\n 9 Ang Mo Kio Yio Chu Kang             0                0     0     0    NaN    \n10 Ang Mo Kio Yio Chu Kang East     1220             2300   750  4270      0.857\n# ℹ 322 more rows\n```\n:::\n:::\n\n\n#### Join attribute and geospatial data (geolocational join)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# convert PA and SZ variable data to upper cases to match SUBZONE_N and PLN_AREA_N of mspz\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n\n\n# left join by SUBZONE_N = SZ\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n```\n:::\n\n\n#### Export/Write Data frame as RDS object\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write to a R Data Serialization(RDS) file, which is useful for storing state of objects between R sessions\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n```\n:::\n\n\n### 4 Choropleth Mapping Geospatial Data Using tmap\n\n------------------------------------------------------------------------\n\nTO BE COMPLETED\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}