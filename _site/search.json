[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R for Geospatial Analytics",
    "section": "",
    "text": "Access the contents via the sidebar.\nContents overview:\n\nHome (this page)\nAbout\nHands-on exercises\nIn-class exercises\n\nAnalyses were done using R programming language. This website was crafted using Quarto package."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "hands-on-exercise/ex01/hands-on-ex01.html",
    "href": "hands-on-exercise/ex01/hands-on-ex01.html",
    "title": "Exercise 01 ‘Geospatial Data Science with R’",
    "section": "",
    "text": "(Copied from Exercise) Learning Outcome:\n\ninstalling and loading sf and tidyverse packages into R environment,\nimporting geospatial data by using appropriate functions of sf package,\nimporting aspatial data by using appropriate function of readr package,\nexploring the content of simple feature data frame by using appropriate Base R and sf functions,\nassigning or transforming coordinate systems by using using appropriate sf functions,\nconverting an aspatial data into a sf data frame by using appropriate function of sf package,\nperforming geoprocessing tasks by using appropriate functions of sf package,\nperforming data wrangling tasks by using appropriate functions of dplyr package and\nperforming Exploratory Data Analysis (EDA) by using appropriate functions from ggplot2 package.\n\n\n1 Import packages\n\n\npacman::p_load(sf, tidyverse)\n\n\n\n2 Import data\n\nThe data used in this assignment is acquired from publicly available sources:\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nPre-Schools Location from data.gov.sg\nCycling Path from LTADataMall\nLatest version of Singapore Airbnb listing data from Inside Airbnb\n\n\n# Singapore Master Plan 2014 Subzone Boundary (polygon feature)\nmpsz &lt;- st_read(dsn = \"data/geospatial/MasterPlan2014SubzoneBoundaryWebSHP\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\n# Singapore Cycling Paths (line feature)\ncyclingpath &lt;- st_read(dsn=\"data/geospatial/CyclingPath_Jul2024\",\n                       layer = \"CyclingPathGazette\")\n\n# Singapore Preschool Locations (point feature)\npreschool &lt;- st_read(\"data/geospatial/PreSchoolsLocation.kml\")\n\n# The above files are read as different geometry-type data frames (as a 'simple feature')\n\n# Airbnb Listing Data (aspatial, but contains coordinate attributes)\nairbnb_listings &lt;- read_csv(\"data/aspatial/listings.csv\",\n                            show_col_types = FALSE)\n\n# The above file is read as a data frame.\n\n\n\n3 Read geometry data\n\n\nRetrieve Geometry List\n\n# Retrieve geometry list to see detailed information\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n#alternatively, use mpsz$geom or mpsz[[1]]\n\n# Output: \n# Geometry set for 323 features \n# Geometry type: MULTIPOLYGON\n# Dimension:     XY\n# Bounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\n# Projected CRS: SVY21\n# First 5 geometries:...\n\n\n\nShow data type of each attribute/field\n\n# Retrieve data type of every attribute in the data frame\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n# Rows: 323\n# Columns: 16\n# $ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13…\n# $ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, …\n# $ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUA…\n# $ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"…\n# $ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"…\n# $ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVE…\n# $ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\",…\n# $ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n# $ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n# $ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"…\n# $ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014…\n# $ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 2…\n# $ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 3…\n# $ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2…\n# $ SHAPE_Area &lt;dbl&gt; 1630379.3, 559816.2, 160807.5, 595428.9, …\n# $ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30.…\n\n\n\nShow first n rows of data frame\n\nhead(mpsz, n=5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n\n\n\n\n\n4 Plot Geospatial Data\n\nThe default plot of an sf object is a multi-plot of all attributes, up to a reasonable maximum as shown above.\n\nplot(mpsz)\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\nPlot geometry only\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\nPlot by attribute\n\nplot(mpsz[\"PLN_AREA_N\"]) # specify a particular attribute used to plot sf object\n\n\n\n\n\n\n\n5 View CRS details and assign a new EPSG code\n\n\n# Retrieve CRS details\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n# Although mpsz data frame is projected in svy21 but when we read until the end of the print, it indicates that the EPSG is 9001. This is a wrong EPSG code because the correct EPSG code for svy21 should be 3414.\n\n#In order to assign the correct EPSG code to mpsz data frame, st_set_crs() of sf package is used as shown in the code chunk below.\n\n\nSet new CRS\n\n# set crs to EPSG:3414, also called SVY21\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\n\n\n\n\n6 CRS Transformation\n\n\n# Observe that preschool uses WGS84 for its CRS\nst_geometry(preschool)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nPOINT Z (103.8072 1.299333 0)\n\n\nPOINT Z (103.826 1.312839 0)\n\n\nPOINT Z (103.8409 1.348843 0)\n\n\nPOINT Z (103.8048 1.435024 0)\n\n\nPOINT Z (103.839 1.33315 0)\n\n# To standardise the coordinate reference system, we will convert it into Singapore's standard CRS SVY21\n\n# WGS84(Geodetic CRS) to SVY21(Projected CRS)\n\npreschool3414 &lt;- st_transform(preschool,\n                              crs = 3414)\n\n\n\n7 Converting Aspatial Data\n\n\n# airbnb_listings is an aspatial data, but it contains coordinates in the form of longitude and latitude.\n\n# we will create a sf data frame using the coordinates\nairbnb_listings_sf &lt;- st_as_sf(airbnb_listings,\n                               coords = c(\"longitude\",\"latitude\"),\n                               crs = 4326) %&gt;%\n  st_transform(crs=3414)\n\n# EPSG:4326 is inferred from the data source, and it is also the standard CRS based on WGS84. The coordinates are in degrees (long, lat)\n\n# glimpse(airbnb_listings_sf)\n\n\n\n8 Geoprocessing with sf package\n\n\nBuffer around geometry\n\n# we will create a buffer around the whole stretch of the cycling paths (line feature), this will also convert the line feature into a polygon feature.\n\nbuffer_cycling &lt;- st_buffer(cyclingpath,\n                            dist = 5,\n                            nQuadSegs = 30)\n\n# the cycling path is now a polygon feature\nst_geometry(buffer_cycling)\n\nGeometry set for 3138 features \nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 11849.32 ymin: 28342.98 xmax: 42649.17 ymax: 48953.15\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nPOLYGON ((40130.06 37081.7, 40132.39 37082.12, ...\n\n\nPOLYGON ((35125.99 42959.75, 35122.14 42938.35,...\n\n\nPOLYGON ((35094.01 42820.45, 35094.63 42819.06,...\n\n\nPOLYGON ((35093.81 42821.63, 35093.83 42821.49,...\n\n\nPOLYGON ((16031.24 36929.24, 16035.69 36944.95,...\n\nbuffer_cycling$area &lt;- st_area(buffer_cycling)\n\nsum(buffer_cycling$area)\n\n2218855 [m^2]\n\n\n\n\nPoint-in-polygon count\n\n# we will find out how many Preschools (point feature) exist within each planning subzone (polygon feature)\n\nmpsz3414$`PreSch Count` &lt;- lengths(st_intersects(mpsz3414,preschool3414))\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\n\n# list the planning subzone with the most number of pre-school\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\n\n\nCalculate the density of ‘pre-School by planning subzone’\nSteps:\n\nCalculate area of each planning subzone\nCount number of pre-school per area (in each planning subzone)\n\n\n# Calculate area of each planning subzone\nmpsz3414$Area &lt;- mpsz3414 %&gt;% \n  st_area()\n\nglimpse(mpsz3414)\n\nRows: 323\nColumns: 18\n$ OBJECTID       &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, …\n$ SUBZONE_NO     &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2,…\n$ SUBZONE_N      &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON…\n$ SUBZONE_C      &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ…\n$ CA_IND         &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", …\n$ PLN_AREA_N     &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MER…\n$ PLN_AREA_C     &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"…\n$ REGION_N       &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"…\n$ REGION_C       &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"…\n$ INC_CRC        &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0…\n$ FMEL_UPD_D     &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-1…\n$ X_ADDR         &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358…\n$ Y_ADDR         &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991…\n$ SHAPE_Leng     &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.…\n$ SHAPE_Area     &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44,…\n$ geometry       &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYG…\n$ `PreSch Count` &lt;int&gt; 0, 6, 0, 5, 3, 13, 5, 1, 11, 1, 4, 2, 0, 1, 6, 0, 0, 0,…\n$ Area           [m^2] 1630379.27 [m^2], 559816.25 [m^2], 160807.50 [m^2], 595…\n\n\n\n# Create new column called 'PreSch Density' by dividing areschool count by area (multiplied by 1000000 as area is in millions)\n\nmpsz3414 &lt;- mpsz3414 %&gt;% mutate(`PreSch Density` = `PreSch Count`/ Area * 1000000)\n\nglimpse(mpsz3414)\n\nRows: 323\nColumns: 19\n$ OBJECTID         &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16…\n$ SUBZONE_NO       &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, …\n$ SUBZONE_N        &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERS…\n$ SUBZONE_C        &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BM…\n$ CA_IND           &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\"…\n$ PLN_AREA_N       &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT M…\n$ PLN_AREA_C       &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\",…\n$ REGION_N         &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\",…\n$ REGION_C         &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC          &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13…\n$ FMEL_UPD_D       &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014…\n$ X_ADDR           &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 253…\n$ Y_ADDR           &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 299…\n$ SHAPE_Leng       &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 442…\n$ SHAPE_Area       &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.4…\n$ geometry         &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOL…\n$ `PreSch Count`   &lt;int&gt; 0, 6, 0, 5, 3, 13, 5, 1, 11, 1, 4, 2, 0, 1, 6, 0, 0, …\n$ Area             [m^2] 1630379.27 [m^2], 559816.25 [m^2], 160807.50 [m^2], 5…\n$ `PreSch Density` [1/m^2] 0.0000000 [1/m^2], 10.7178026 [1/m^2], 0.0000000 [1…\n\n\n\n\n\n9 Exploratory Data Analysis\n\n\n# \"In this section, you will learn how to use appropriate ggplot2 functions to create functional and yet truthful statistical graphs for EDA purposes.\"\n\n# plot the histogram to observe distribution of preschool density (count per area in subzone)\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\n# to improve on visualisation, we will specify the mapping aesthetics + histogram(bin size, color, fill) + labels\n\nggplot(\n  data = mpsz3414, \n  mapping = aes(\n    x = as.numeric(`PreSch Density`))\n  ) +\n  geom_histogram(\n    bins=20, \n    color= 'black', \n    fill=\"light blue\"\n  ) +\n  labs(\n    title = \"Are pre-school even distributed in Singapore?\",\n    subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n    x = \"Pre-school density (per km sq)\",\n    y = \"Frequency\"\n  )\n\n\n\n\n\n# a scatter plot: using PreSch Density as x, PreSch Count as y, adding color by their region names + point plot\n\nggplot(\n  data = mpsz3414, \n  mapping = aes(\n    x = as.numeric(`PreSch Density`),\n    y = `PreSch Count`,\n    color = REGION_N)\n  ) +\n  geom_point()"
  },
  {
    "objectID": "in-class-exercise/ex01/in-class-ex01.html",
    "href": "in-class-exercise/ex01/in-class-ex01.html",
    "title": "In-class-exercise 01 (reviewing Hands-exercise 01)",
    "section": "",
    "text": "1 Import packages & data\n\n\npacman::p_load(tidyverse, sf)\n\n\nmpsz &lt;- st_read(\n  dsn = \"data/geospatial/MPSZ-2019\",\n  layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\hengkuanxin\\SMU_Geospatial_Analytics\\in-class-exercise\\ex01\\data\\geospatial\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n\n2 Reading Data\n\n\nst_geometry(mpsz)\n\nGeometry set for 332 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\nplot(mpsz)"
  },
  {
    "objectID": "in-class-exercise/ex01/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "href": "in-class-exercise/ex01/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "title": "IS415 Practice Site",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "",
    "text": "(Copied from Exercise) Overview:\nIn general, thematic mapping involves the use of map symbols to visualize selected properties of geographic features that are not naturally visible, such as population, temperature, crime rate, and property prices, just to mention a few of them.\nGeovisualisation, on the other hand, works by providing graphical ideation to render a place, a phenomenon or a process visible, enabling human’s most powerful information-processing abilities – those of spatial cognition associated with our eye–brain vision system – to be directly brought to bear.\nIn this chapter, you will learn how to plot functional and truthful choropleth maps by using an R package called tmap package.\n\n1 Import packages\n\n\npacman::p_load(sf, tidyverse, tmap)\n\n\n\n2 Import data\n\n(Copied from Exercise) Two data set will be used to create the choropleth map. They are:\n\nMaster Plan 2014 Subzone Boundary (Web) (i.e. MP14_SUBZONE_WEB_PL) in ESRI shapefile format. It can be downloaded at data.gov.sg This is a geospatial data. It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2014.\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format (i.e. respopagesextod2011to2020.csv). This is an aspatial data fie. It can be downloaded at Department of Statistics, Singapore Although it does not contain any coordinates values, but it’s PA and SZ fields can be used as unique identifiers to geocode to MP14_SUBZONE_WEB_PL shapefile.\n\n\nmpsz &lt;- st_read(\n  dsn=\"data/geospatial/MasterPlan2014SubzoneBoundaryWebSHP\",\n  layer=\"MP14_SUBZONE_WEB_PL\")\n\n# mpsz\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020/respopagesextod2011to2020.csv\", show_col_types = FALSE)\n\n# popdata\n# colnames(popdata)\n\n\n\n3 Data Preparation\n\n\nCreate Data Table for Year 2020\nWe want to plot a choropleth map using year 2020 values, by joining the population table with the masterplan subzone object.\nAim: Create a data table for year 2020 values, containing columns as shown:\n\n\n\nPA\nSZ\nYOUNG\nECONOMY ACTIVE\nAGED\nTOTAL\nDEPENDENCY\n\n\n\nTherefore, we will derive values for:\n\nYOUNG: age group 0 to 4 until age group 20 to 24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age group, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time==2020) %&gt;%    # select rows where Time = 2020 \n  group_by(PA, SZ, AG) %&gt;%  # group by PA, SZ, AG\n  summarise(`POP` = sum(`Pop`)) %&gt;% # sum up the population within each group\n  ungroup() %&gt;%              # ungroup table (which allows for further calculations\n                             # on individual rows)\n  pivot_wider(               # create new columns using values from AG as names\n    names_from=AG,           # and values from POP as values\n    values_from=POP)\n\ncolnames(popdata2020)\n\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_over\"\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate(YOUNG = rowSums(.[3:6]) + rowSums(.[14])) %&gt;% # add YOUNG = sum across the row where index = [3:6] and [15] \n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13]) + rowSums(.[15])) %&gt;% # add ECONOMY ACTIVE\n  mutate(`AGED`= rowSums(.[16:21])) %&gt;% # add AGED\n  mutate(`TOTAL`= rowSums(.[3:21])) %&gt;% # add TOTAL\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %&gt;% # add DEPENDENCY\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\ncolnames(popdata2020)\n\n[1] \"PA\"             \"SZ\"             \"YOUNG\"          \"ECONOMY ACTIVE\"\n[5] \"AGED\"           \"TOTAL\"          \"DEPENDENCY\"    \n\n\n\n\nJoin attribute and geospatial data (geolocational join)\n\n# convert PA and SZ variable data to upper cases to match SUBZONE_N and PLN_AREA_N of mspz\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ),      # mutate at variables PA , SZ\n          .funs = list(toupper)) %&gt;%   # apply function list(toupper)\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\n\n# left join by SUBZONE_N = SZ\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\n\nExport/Write Data frame as RDS object\n\n# Write to a R Data Serialization(RDS) file, which is useful for storing state of objects between R sessions\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n\n\n\n\n4 Choropleth Mapping Geospatial Data Using tmap\n\n\nOverview Examples\n\nQuick Method of Visualising using qtm()\n\n# set tmap mode to \"plot\" , alternatively use view for interactive plot\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020,\n    fill = \"DEPENDENCY\")\n\n\n\n# mpsz_pop2020\n\n\n\nAdjusting layouts, borders, and adding furnitures (e.g. compass, scale)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\nBasic Steps to create a Choropleth Map. Using tm_polygons() vs tm_fill() + tm_borders()\n\n# st_make_valid(mpsz_pop2020)\n# tmap_options(check.and.fix = TRUE)\n# tmap_mode(\"plot\")\n\n# Step 1a: Plain Polygon\ntm1 &lt;- tm_shape(mpsz_pop2020) + tm_polygons() + tm_layout(\n  main.title = \"Step 1a: Plain Polygon\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Step 1b: Coloured Polygon using DEPENDENCY\ntm2 &lt;- tm_shape(mpsz_pop2020)+ tm_polygons(\"DEPENDENCY\") + tm_layout(\n  main.title = \"Step 1b: Coloured Polygon using DEPENDENCY\",\n  main.title.position = \"center\",\n  main.title.size = 0.7,\n  legend.width = 5.0)\n\n# Alternatively, Step 2a: Coloured Fill using DEPENDENCY instead of Polygon\ntm3 &lt;- tm_shape(mpsz_pop2020)+ tm_fill(\"DEPENDENCY\") + tm_layout(\n  main.title = \"Alternatively, Step 2a: Coloured Fill using DEPENDENCY instead of Polygon\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Step 2b: Add in borders on top of Fill\ntm4 &lt;- tm_shape(mpsz_pop2020) + tm_fill(\"DEPENDENCY\") + tm_borders(lwd = 0.1, alpha = 1) + tm_layout(\n  main.title = \"Step 2b: Add in borders on top of Fill\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Specify Data Classification (Quantile, n=5)\ntm5 &lt;- tm_shape(mpsz_pop2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"quantile\") + tm_borders(alpha = 0.5) + tm_layout(\n  main.title = \"Specify Data Classification (Quantile, n=5)\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Specify Data Classification (Equal range), n=5)\ntm6 &lt;- tm_shape(mpsz_pop2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"equal\") + tm_borders(alpha = 0.5) + tm_layout(\n  main.title = \"Specify Data Classification (Equal range), n=5)\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Plot all maps together\ntmap_arrange(tm1,tm2,tm3,tm4,tm5,tm6)\n\n\n\n\n\n\n\nDetermining Data Classification Methods and Number of Classes\n\n\n\nData Classification Guide\n\n\nGiven that Dependency ranges from 0 to 19, let us try n = 1 + 3.32 * log(20) ~= 5.\n\nggplot(data = mpsz_pop2020, \n       mapping = aes(x = `DEPENDENCY`)\n       ) +\n  geom_histogram()\n\n\n\n  # geom_dotplot()\n  # geom_freqpoly()\n\nBy plotting the distribution of DEPENDENCY, we see that there is an outlier that is significantly larger. To avoid misrepresenting the data, we should avoid equal intervals, quantile, and standard deviation. A good choice may be Jenks (Natural Breaks), or other manual classifications.\n\n# Visualise the attribute value range\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n\n\n\n\nCustom Intervals/Ranges for Data Classification\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nAdjusting palette, Inverting Palette\n\n# Using colour palette Blues instead of default\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n## Changing palette to Greens. Use -Greens for inverse colouring\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nAdjusting Legend properties\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nAdjusting tmap_style()\n\ntmap_style(\"classic\")\n\n# other available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nMore Examples\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\ntmap_style(\"white\")\n\n\n\n\n5 Showing Multiple Maps\n\n\nMethod 1: specify within tm_fill()\n\n# note two maps created, one using \"YOUNG\", the other \"AGED\"\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\nMethod 2: Using tm_facets(by = ATTRIBUTE)\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nMethod 3: Using tmap_arrange(map1, map2, …)\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n6 Specifying Specific Region in Map to Show\n\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#create-data-table-for-year-2020",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#create-data-table-for-year-2020",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Create Data Table for Year 2020",
    "text": "Create Data Table for Year 2020\nWe want to plot a choropleth map using year 2020 values, by joining the population table with the masterplan subzone object.\nAim: Create a data table for year 2020 values, containing columns as shown:\n\n\n\nPA\nSZ\nYOUNG\nECONOMY ACTIVE\nAGED\nTOTAL\nDEPENDENCY\n\n\n\nTherefore, we will derive values for:\n\nYOUNG: age group 0 to 4 until age group 20 to 24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age group, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time==2020) %&gt;%    # select rows where Time = 2020 \n  group_by(PA, SZ, AG) %&gt;%  # group by PA, SZ, AG\n  summarise(`POP` = sum(`Pop`)) %&gt;% # sum up the population within each group\n  ungroup() %&gt;%              # ungroup table (which allows for further calculations\n                             # on individual rows)\n  pivot_wider(               # create new columns using values from AG as names\n    names_from=AG,           # and values from POP as values\n    values_from=POP)\n\ncolnames(popdata2020)\n\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_over\"\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate(YOUNG = rowSums(.[3:6]) + rowSums(.[14])) %&gt;% # add YOUNG = sum across the row where index = [3:6] and [15] \n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13]) + rowSums(.[15])) %&gt;% # add ECONOMY ACTIVE\n  mutate(`AGED`= rowSums(.[16:21])) %&gt;% # add AGED\n  mutate(`TOTAL`= rowSums(.[3:21])) %&gt;% # add TOTAL\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %&gt;% # add DEPENDENCY\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\ncolnames(popdata2020)\n\n[1] \"PA\"             \"SZ\"             \"YOUNG\"          \"ECONOMY ACTIVE\"\n[5] \"AGED\"           \"TOTAL\"          \"DEPENDENCY\""
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#join-attribute-and-geospatial-data-geolocational-join",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#join-attribute-and-geospatial-data-geolocational-join",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Join attribute and geospatial data (geolocational join)",
    "text": "Join attribute and geospatial data (geolocational join)\n\n# convert PA and SZ variable data to upper cases to match SUBZONE_N and PLN_AREA_N of mspz\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ),      # mutate at variables PA , SZ\n          .funs = list(toupper)) %&gt;%   # apply function list(toupper)\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\n\n# left join by SUBZONE_N = SZ\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#exportwrite-data-frame-as-rds-object",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#exportwrite-data-frame-as-rds-object",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Export/Write Data frame as RDS object",
    "text": "Export/Write Data frame as RDS object\n\n# Write to a R Data Serialization(RDS) file, which is useful for storing state of objects between R sessions\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#overview-examples",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#overview-examples",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Overview Examples",
    "text": "Overview Examples\n\nQuick Method of Visualising using qtm()\n\n# set tmap mode to \"plot\" , alternatively use view for interactive plot\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020,\n    fill = \"DEPENDENCY\")\n\n\n\n# mpsz_pop2020\n\n\n\nAdjusting layouts, borders, and adding furnitures (e.g. compass, scale)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\nBasic Steps to create a Choropleth Map. Using tm_polygons() vs tm_fill() + tm_borders()\n\n# st_make_valid(mpsz_pop2020)\n# tmap_options(check.and.fix = TRUE)\n# tmap_mode(\"plot\")\n\n# Step 1a: Plain Polygon\ntm1 &lt;- tm_shape(mpsz_pop2020) + tm_polygons() + tm_layout(\n  main.title = \"Step 1a: Plain Polygon\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Step 1b: Coloured Polygon using DEPENDENCY\ntm2 &lt;- tm_shape(mpsz_pop2020)+ tm_polygons(\"DEPENDENCY\") + tm_layout(\n  main.title = \"Step 1b: Coloured Polygon using DEPENDENCY\",\n  main.title.position = \"center\",\n  main.title.size = 0.7,\n  legend.width = 5.0)\n\n# Alternatively, Step 2a: Coloured Fill using DEPENDENCY instead of Polygon\ntm3 &lt;- tm_shape(mpsz_pop2020)+ tm_fill(\"DEPENDENCY\") + tm_layout(\n  main.title = \"Alternatively, Step 2a: Coloured Fill using DEPENDENCY instead of Polygon\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Step 2b: Add in borders on top of Fill\ntm4 &lt;- tm_shape(mpsz_pop2020) + tm_fill(\"DEPENDENCY\") + tm_borders(lwd = 0.1, alpha = 1) + tm_layout(\n  main.title = \"Step 2b: Add in borders on top of Fill\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Specify Data Classification (Quantile, n=5)\ntm5 &lt;- tm_shape(mpsz_pop2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"quantile\") + tm_borders(alpha = 0.5) + tm_layout(\n  main.title = \"Specify Data Classification (Quantile, n=5)\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Specify Data Classification (Equal range), n=5)\ntm6 &lt;- tm_shape(mpsz_pop2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"equal\") + tm_borders(alpha = 0.5) + tm_layout(\n  main.title = \"Specify Data Classification (Equal range), n=5)\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Plot all maps together\ntmap_arrange(tm1,tm2,tm3,tm4,tm5,tm6)"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#determining-data-classification-methods-and-number-of-classes",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#determining-data-classification-methods-and-number-of-classes",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Determining Data Classification Methods and Number of Classes",
    "text": "Determining Data Classification Methods and Number of Classes\n\n\n\nData Classification Guide\n\n\nGiven that Dependency ranges from 0 to 19, let us try n = 1 + 3.32 * log(20) ~= 5.\n\nggplot(data = mpsz_pop2020, \n       mapping = aes(x = `DEPENDENCY`)\n       ) +\n  geom_histogram()\n\n\n\n  # geom_dotplot()\n  # geom_freqpoly()\n\nBy plotting the distribution of DEPENDENCY, we see that there is an outlier that is significantly larger. To avoid misrepresenting the data, we should avoid equal intervals, quantile, and standard deviation. A good choice may be Jenks (Natural Breaks), or other manual classifications.\n\n# Visualise the attribute value range\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#custom-intervalsranges-for-data-classification",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#custom-intervalsranges-for-data-classification",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Custom Intervals/Ranges for Data Classification",
    "text": "Custom Intervals/Ranges for Data Classification\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#adjusting-palette-inverting-palette",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#adjusting-palette-inverting-palette",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Adjusting palette, Inverting Palette",
    "text": "Adjusting palette, Inverting Palette\n\n# Using colour palette Blues instead of default\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n## Changing palette to Greens. Use -Greens for inverse colouring\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#adjusting-legend-properties",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#adjusting-legend-properties",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Adjusting Legend properties",
    "text": "Adjusting Legend properties\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#adjusting-tmap_style",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#adjusting-tmap_style",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Adjusting tmap_style()",
    "text": "Adjusting tmap_style()\n\ntmap_style(\"classic\")\n\n# other available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#more-examples",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#more-examples",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "More Examples",
    "text": "More Examples\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\ntmap_style(\"white\")"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#method-1-specify-within-tm_fill",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#method-1-specify-within-tm_fill",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Method 1: specify within tm_fill()",
    "text": "Method 1: specify within tm_fill()\n\n# note two maps created, one using \"YOUNG\", the other \"AGED\"\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#method-2-using-tm_facetsby-attribute",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#method-2-using-tm_facetsby-attribute",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Method 2: Using tm_facets(by = ATTRIBUTE)",
    "text": "Method 2: Using tm_facets(by = ATTRIBUTE)\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#method-3-using-tmap_arrangemap1-map2",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#method-3-using-tmap_arrangemap1-map2",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Method 3: Using tmap_arrange(map1, map2, …)",
    "text": "Method 3: Using tmap_arrange(map1, map2, …)\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "in-class-exercise/ex02/in-class-ex02.html",
    "href": "in-class-exercise/ex02/in-class-ex02.html",
    "title": "In-class-exercise 02 (reviewing Hands-exercise 02)",
    "section": "",
    "text": "# load packages\n\npacman::p_load(sf, tidyverse, tmap)\n\n#pacman::p_load(sf, tidyverse, ggstatsplot, tmap)\n\n\n\n\nWe are going to import the Master Plan 2014 Subzone Boundary Web (file format .shp and .kml) retrieved from data.gov.sg.\nThis code chunk imports the shapefile data\n\nmpsz_shp &lt;- st_read(dsn=\"data/geospatial/MasterPlan2014SubzoneBoundaryWebSHP\", \n                    layer=\"MP14_SUBZONE_WEB_PL\")\n\nIn RStudio, check the Help tab to search for library functions, it will show you the input arguments and the output.\n\n\n\nWhenever you import data, make sure to view the data and understand what data types, data formats, crs (coordinate reference systems), geometry type, and so on.\n\nclass(mpsz_shp)\n\n[1] \"sf\"         \"data.frame\"\n\n\nNote: when reading data types:\n\nint : an integer\nnum : numerical; can be any real number\nchr : characters - geometry : sf’s geometry data.\n\nE.g. “sfc_MULTIPOLYGONS” if the package detects multipolygons.\n\n\nrefer to basic data types in R\n\n\n\nThis code chunk tries to import the kml data\n\n# mpsz_kml &lt;- st_read(\"data/geospatial/MasterPlan2014SubzoneBoundaryWebKML.kml\")\n# This data file cannot be used; The data source is corrupted.\n\nThere might be a reasons why the kml cannot be used: (1) it is a zipped file, or (2) the file got tampered/corrupted during the uploading process.\nIf you want to convert to another file format, you can generate it using sf::st_write().\n\n\n\n\n#| output: false\n\nst_write(mpsz_shp,\n         \"data/geospatial/MP14_SUBZONE_WEB_PL.kml\",\n         delete_dsn = TRUE) # delete old file if exists.\n\nDeleting source `data/geospatial/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting layer `MP14_SUBZONE_WEB_PL' to data source \n  `data/geospatial/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon."
  },
  {
    "objectID": "in-class-exercise/ex02/in-class-ex02.html#working-with-master-plan-planning-sub-zone-data",
    "href": "in-class-exercise/ex02/in-class-ex02.html#working-with-master-plan-planning-sub-zone-data",
    "title": "In-class-exercise 02 (reviewing Hands-exercise 02)",
    "section": "",
    "text": "# load packages\n\npacman::p_load(sf, tidyverse, tmap)\n\n#pacman::p_load(sf, tidyverse, ggstatsplot, tmap)\n\n\n\n\nWe are going to import the Master Plan 2014 Subzone Boundary Web (file format .shp and .kml) retrieved from data.gov.sg.\nThis code chunk imports the shapefile data\n\nmpsz_shp &lt;- st_read(dsn=\"data/geospatial/MasterPlan2014SubzoneBoundaryWebSHP\", \n                    layer=\"MP14_SUBZONE_WEB_PL\")\n\nIn RStudio, check the Help tab to search for library functions, it will show you the input arguments and the output.\n\n\n\nWhenever you import data, make sure to view the data and understand what data types, data formats, crs (coordinate reference systems), geometry type, and so on.\n\nclass(mpsz_shp)\n\n[1] \"sf\"         \"data.frame\"\n\n\nNote: when reading data types:\n\nint : an integer\nnum : numerical; can be any real number\nchr : characters - geometry : sf’s geometry data.\n\nE.g. “sfc_MULTIPOLYGONS” if the package detects multipolygons.\n\n\nrefer to basic data types in R\n\n\n\nThis code chunk tries to import the kml data\n\n# mpsz_kml &lt;- st_read(\"data/geospatial/MasterPlan2014SubzoneBoundaryWebKML.kml\")\n# This data file cannot be used; The data source is corrupted.\n\nThere might be a reasons why the kml cannot be used: (1) it is a zipped file, or (2) the file got tampered/corrupted during the uploading process.\nIf you want to convert to another file format, you can generate it using sf::st_write().\n\n\n\n\n#| output: false\n\nst_write(mpsz_shp,\n         \"data/geospatial/MP14_SUBZONE_WEB_PL.kml\",\n         delete_dsn = TRUE) # delete old file if exists.\n\nDeleting source `data/geospatial/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting layer `MP14_SUBZONE_WEB_PL' to data source \n  `data/geospatial/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon."
  },
  {
    "objectID": "in-class-exercise/ex02/in-class-ex02.html#choosing-good-data-sets",
    "href": "in-class-exercise/ex02/in-class-ex02.html#choosing-good-data-sets",
    "title": "In-class-exercise 02 (reviewing Hands-exercise 02)",
    "section": "3. Choosing Good Data sets",
    "text": "3. Choosing Good Data sets\n\n3.1 Pre-school locations\ndownload and load the preschool locations from data.gov.sg\nTO BE COMPLETED\n\n#import data set\npreschool_kml &lt;- st_read(dsn=\"data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\hengkuanxin\\SMU_Geospatial_Analytics\\in-class-exercise\\ex02\\data\\geospatial\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n# preschool_geojson &lt;- st_read(\"data/geospatial/PreschoolsLocation.geojson\")\n\n\n\n3.2 Masterplan 2019 Sub-zone\n\n#import data set\nmpsz19_kml &lt;- st_read(\"data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n\nmpsz19_shp &lt;- st_read(dsn=\"data/geospatial/MPSZ-2019\",\n                      layer=\"MPSZ-2019\")\n\nNote the differences: both have 332 features, but one has 2+1 fields, the other has 6+1 fields. KML has nested multiple attributes within 1 column. The KML file format in this context is harder to use than the SHP file format.\n\n\n3.3 Transforming the CRS\n\nmpsz19_shp_3414 &lt;- mpsz19_shp %&gt;%\n  st_transform(crs=3414)\n\nEPSG:3414 refers to Singapore’s projected coordinate system (SVY21), as opposed to WGS84. A projected coordinate system uses distances measure, rather than degrees (latitude, longitude)"
  },
  {
    "objectID": "in-class-exercise/ex02/in-class-ex02.html#working-with-population-data",
    "href": "in-class-exercise/ex02/in-class-ex02.html#working-with-population-data",
    "title": "In-class-exercise 02 (reviewing Hands-exercise 02)",
    "section": "4.0 Working with Population Data",
    "text": "4.0 Working with Population Data\n\npop2023 &lt;- read_csv(\"data/aspatial/respopagesextod2023.csv\", )\n\n# show column data types\nspec(pop2023)\n\nNote: Ease of use of data: see how the columns and data are categorised between different the different data sets respopagesextod2023.csv and respopagesextod2023.xlsx. Check the other data sets: respopagesexfa2023.csv\n\npop2023_sum &lt;- pop2023 %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()\n\ncolnames(pop2023_sum)\n\n[1] \"PA\"  \"SZ\"  \"AG\"  \"POP\"\n\npop2023_sum &lt;- pop2023_sum %&gt;%\n  pivot_wider(names_from = `AG`,\n              values_from = `POP`)\n\ncolnames(pop2023_sum)\n\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_Over\"\n\n\nNote: tidyverse is a collection of packages for data science, also called a disjointed integrated packages. The separate packages maintained separately and do not contain same function names. Collectively, they might conflict with Base R functions, however; e.g. dpylr::filter().\n\npop2023_sum &lt;- pop2023_sum %&gt;%\n  mutate(YOUNG = rowSums(.[3:6]) + rowSums(.[14])) %&gt;% # add YOUNG = sum across the row where index = [3:6] and [15] \n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13]) + rowSums(.[15])) %&gt;% # add ECONOMY ACTIVE\n  mutate(`AGED`= rowSums(.[16:21])) %&gt;% # add AGED\n  mutate(`TOTAL`= rowSums(.[3:21])) %&gt;% # add TOTAL\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %&gt;% # add DEPENDENCY\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\ncolnames(pop2023_sum)\n\n[1] \"PA\"             \"SZ\"             \"YOUNG\"          \"ECONOMY ACTIVE\"\n[5] \"AGED\"           \"TOTAL\"          \"DEPENDENCY\"    \n\n\n\nJoin together population data with geospatial data (masterplan sub-zone)\n\n# convert PA and SZ variable data to upper cases to match SUBZONE_N and PLN_AREA_N of mspz\npop2023_sum &lt;- pop2023_sum %&gt;%\n  mutate_at(.vars = vars(PA, SZ),      # mutate at variables PA , SZ\n          .funs = list(toupper)) %&gt;%   # apply function list(toupper)\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\n\n# left join by SUBZONE_N = SZ\nmpsz19_shp_3414 &lt;- left_join(mpsz19_shp_3414, pop2023_sum,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))"
  }
]