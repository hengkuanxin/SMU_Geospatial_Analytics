[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R for Geospatial Analytics",
    "section": "",
    "text": "Contents overview:\n\nHome (this page)\nAbout\nHands-on exercises\nIn-class exercises\nTake-home Assignment\n\nThe table below shows the latest edits I have added.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nModified\n\n\nTitle\n\n\n\n\n\n\nSep 4, 2024\n\n\n9/5/24, 11:45:28 PM\n\n\n01 Take Home Exercise 1\n\n\n\n\nAug 29, 2024\n\n\n9/4/24, 1:06:04 AM\n\n\n03 (Part 1) ‘1st Order Spatial Point Patterns Analysis Methods’\n\n\n\n\nAug 29, 2024\n\n\n9/4/24, 1:02:08 AM\n\n\n03 (Part 2) ‘2nd Order Spatial Point Patterns Analysis Methods’\n\n\n\n\nSep 2, 2024\n\n\n9/4/24, 12:47:23 AM\n\n\n03 In-class Exercise 3 (Review)\n\n\n\n\nSep 3, 2024\n\n\n9/3/24, 10:51:07 PM\n\n\n04 ‘Network Constrained Spatial Point Patterns Analysis’\n\n\n\n\nAug 21, 2024\n\n\n9/2/24, 12:50:39 PM\n\n\n01 In-class Exercise 1 (Review)\n\n\n\n\nAug 26, 2024\n\n\n9/2/24, 12:50:06 PM\n\n\n02 In-class Exercise 2 (Review)\n\n\n\n\nAug 21, 2024\n\n\n8/28/24, 12:59:02 AM\n\n\n02 ‘Thematic Mapping and GeoVisualisation with R’\n\n\n\n\nAug 20, 2024\n\n\n8/28/24, 12:58:55 AM\n\n\n01 ‘Geospatial Data Science with R’\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "hands-on-exercise/ex01/hands-on-ex01.html",
    "href": "hands-on-exercise/ex01/hands-on-ex01.html",
    "title": "Exercise 01 ‘Geospatial Data Science with R’",
    "section": "",
    "text": "(Copied from Exercise) Learning Outcome:\n\ninstalling and loading sf and tidyverse packages into R environment,\nimporting geospatial data by using appropriate functions of sf package,\nimporting aspatial data by using appropriate function of readr package,\nexploring the content of simple feature data frame by using appropriate Base R and sf functions,\nassigning or transforming coordinate systems by using using appropriate sf functions,\nconverting an aspatial data into a sf data frame by using appropriate function of sf package,\nperforming geoprocessing tasks by using appropriate functions of sf package,\nperforming data wrangling tasks by using appropriate functions of dplyr package and\nperforming Exploratory Data Analysis (EDA) by using appropriate functions from ggplot2 package.\n\n\n1 Import packages\n\n\npacman::p_load(sf, tidyverse)\n\n\n\n2 Import data\n\nThe data used in this assignment is acquired from publicly available sources:\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nPre-Schools Location from data.gov.sg\nCycling Path from LTADataMall\nLatest version of Singapore Airbnb listing data from Inside Airbnb\n\n\n# Singapore Master Plan 2014 Subzone Boundary (polygon feature)\nmpsz &lt;- st_read(dsn = \"data/geospatial/MasterPlan2014SubzoneBoundaryWebSHP\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\n# Singapore Cycling Paths (line feature)\ncyclingpath &lt;- st_read(dsn=\"data/geospatial/CyclingPath_Jul2024\",\n                       layer = \"CyclingPathGazette\")\n\n# Singapore Preschool Locations (point feature)\npreschool &lt;- st_read(\"data/geospatial/PreSchoolsLocation.kml\")\n\n# The above files are read as different geometry-type data frames (as a 'simple feature')\n\n# Airbnb Listing Data (aspatial, but contains coordinate attributes)\nairbnb_listings &lt;- read_csv(\"data/aspatial/listings.csv\",\n                            show_col_types = FALSE)\n\n# The above file is read as a data frame.\n\n\n\n3 Read geometry data\n\n\nRetrieve Geometry List\n\n# Retrieve geometry list to see detailed information\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n#alternatively, use mpsz$geom or mpsz[[1]]\n\n# Output: \n# Geometry set for 323 features \n# Geometry type: MULTIPOLYGON\n# Dimension:     XY\n# Bounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\n# Projected CRS: SVY21\n# First 5 geometries:...\n\n\n\nShow data type of each attribute/field\n\n# Retrieve data type of every attribute in the data frame\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n# Rows: 323\n# Columns: 16\n# $ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13…\n# $ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, …\n# $ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUA…\n# $ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"…\n# $ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"…\n# $ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVE…\n# $ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\",…\n# $ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n# $ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n# $ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"…\n# $ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014…\n# $ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 2…\n# $ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 3…\n# $ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2…\n# $ SHAPE_Area &lt;dbl&gt; 1630379.3, 559816.2, 160807.5, 595428.9, …\n# $ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30.…\n\n\n\nShow first n rows of data frame\n\nhead(mpsz, n=5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n\n\n\n\n\n4 Plot Geospatial Data\n\nThe default plot of an sf object is a multi-plot of all attributes, up to a reasonable maximum as shown above.\n\nplot(mpsz)\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\n\nPlot geometry only\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\n\n\nPlot by attribute\n\nplot(mpsz[\"PLN_AREA_N\"]) # specify a particular attribute used to plot sf object\n\n\n\n\n\n\n\n\n\n\n\n5 View CRS details and assign a new EPSG code\n\n\n# Retrieve CRS details\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n# Although mpsz data frame is projected in svy21 but when we read until the end of the print, it indicates that the EPSG is 9001. This is a wrong EPSG code because the correct EPSG code for svy21 should be 3414.\n\n#In order to assign the correct EPSG code to mpsz data frame, st_set_crs() of sf package is used as shown in the code chunk below.\n\n\nSet new CRS\n\n# set crs to EPSG:3414, also called SVY21\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\n\n\n\n\n6 CRS Transformation\n\n\n# Observe that preschool uses WGS84 for its CRS\nst_geometry(preschool)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nPOINT Z (103.8072 1.299333 0)\n\n\nPOINT Z (103.826 1.312839 0)\n\n\nPOINT Z (103.8409 1.348843 0)\n\n\nPOINT Z (103.8048 1.435024 0)\n\n\nPOINT Z (103.839 1.33315 0)\n\n# To standardise the coordinate reference system, we will convert it into Singapore's standard CRS SVY21\n\n# WGS84(Geodetic CRS) to SVY21(Projected CRS)\n\npreschool3414 &lt;- st_transform(preschool,\n                              crs = 3414)\n\n\n\n7 Converting Aspatial Data\n\n\n# airbnb_listings is an aspatial data, but it contains coordinates in the form of longitude and latitude.\n\n# we will create a sf data frame using the coordinates\nairbnb_listings_sf &lt;- st_as_sf(airbnb_listings,\n                               coords = c(\"longitude\",\"latitude\"),\n                               crs = 4326) %&gt;%\n  st_transform(crs=3414)\n\n# EPSG:4326 is inferred from the data source, and it is also the standard CRS based on WGS84. The coordinates are in degrees (long, lat)\n\n# glimpse(airbnb_listings_sf)\n\n\n\n8 Geoprocessing with sf package\n\n\nBuffer around geometry\n\n# we will create a buffer around the whole stretch of the cycling paths (line feature), this will also convert the line feature into a polygon feature.\n\nbuffer_cycling &lt;- st_buffer(cyclingpath,\n                            dist = 5,\n                            nQuadSegs = 30)\n\n# the cycling path is now a polygon feature\nst_geometry(buffer_cycling)\n\nGeometry set for 3138 features \nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 11849.32 ymin: 28342.98 xmax: 42649.17 ymax: 48953.15\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nPOLYGON ((40130.06 37081.7, 40132.39 37082.12, ...\n\n\nPOLYGON ((35125.99 42959.75, 35122.14 42938.35,...\n\n\nPOLYGON ((35094.01 42820.45, 35094.63 42819.06,...\n\n\nPOLYGON ((35093.81 42821.63, 35093.83 42821.49,...\n\n\nPOLYGON ((16031.24 36929.24, 16035.69 36944.95,...\n\nbuffer_cycling$area &lt;- st_area(buffer_cycling)\n\nsum(buffer_cycling$area)\n\n2218855 [m^2]\n\n\n\n\nPoint-in-polygon count\n\n# we will find out how many Preschools (point feature) exist within each planning subzone (polygon feature)\n\nmpsz3414$`PreSch Count` &lt;- lengths(st_intersects(mpsz3414,preschool3414))\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\n\n# list the planning subzone with the most number of pre-school\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\n\n\nCalculate the density of ‘pre-School by planning subzone’\nSteps:\n\nCalculate area of each planning subzone\nCount number of pre-school per area (in each planning subzone)\n\n\n# Calculate area of each planning subzone\nmpsz3414$Area &lt;- mpsz3414 %&gt;% \n  st_area()\n\nglimpse(mpsz3414)\n\nRows: 323\nColumns: 18\n$ OBJECTID       &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, …\n$ SUBZONE_NO     &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2,…\n$ SUBZONE_N      &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON…\n$ SUBZONE_C      &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ…\n$ CA_IND         &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", …\n$ PLN_AREA_N     &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MER…\n$ PLN_AREA_C     &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"…\n$ REGION_N       &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"…\n$ REGION_C       &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"…\n$ INC_CRC        &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0…\n$ FMEL_UPD_D     &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-1…\n$ X_ADDR         &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358…\n$ Y_ADDR         &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991…\n$ SHAPE_Leng     &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.…\n$ SHAPE_Area     &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44,…\n$ geometry       &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYG…\n$ `PreSch Count` &lt;int&gt; 0, 6, 0, 5, 3, 13, 5, 1, 11, 1, 4, 2, 0, 1, 6, 0, 0, 0,…\n$ Area           [m^2] 1630379.27 [m^2], 559816.25 [m^2], 160807.50 [m^2], 595…\n\n\n\n# Create new column called 'PreSch Density' by dividing areschool count by area (multiplied by 1000000 as area is in millions)\n\nmpsz3414 &lt;- mpsz3414 %&gt;% mutate(`PreSch Density` = `PreSch Count`/ Area * 1000000)\n\nglimpse(mpsz3414)\n\nRows: 323\nColumns: 19\n$ OBJECTID         &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16…\n$ SUBZONE_NO       &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, …\n$ SUBZONE_N        &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERS…\n$ SUBZONE_C        &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BM…\n$ CA_IND           &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\"…\n$ PLN_AREA_N       &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT M…\n$ PLN_AREA_C       &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\",…\n$ REGION_N         &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\",…\n$ REGION_C         &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC          &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13…\n$ FMEL_UPD_D       &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014…\n$ X_ADDR           &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 253…\n$ Y_ADDR           &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 299…\n$ SHAPE_Leng       &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 442…\n$ SHAPE_Area       &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.4…\n$ geometry         &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOL…\n$ `PreSch Count`   &lt;int&gt; 0, 6, 0, 5, 3, 13, 5, 1, 11, 1, 4, 2, 0, 1, 6, 0, 0, …\n$ Area             [m^2] 1630379.27 [m^2], 559816.25 [m^2], 160807.50 [m^2], 5…\n$ `PreSch Density` [1/m^2] 0.0000000 [1/m^2], 10.7178026 [1/m^2], 0.0000000 [1…\n\n\n\n\n\n9 Exploratory Data Analysis\n\n\n# \"In this section, you will learn how to use appropriate ggplot2 functions to create functional and yet truthful statistical graphs for EDA purposes.\"\n\n# plot the histogram to observe distribution of preschool density (count per area in subzone)\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\n\n\n\n\n# to improve on visualisation, we will specify the mapping aesthetics + histogram(bin size, color, fill) + labels\n\nggplot(\n  data = mpsz3414, \n  mapping = aes(\n    x = as.numeric(`PreSch Density`))\n  ) +\n  geom_histogram(\n    bins=20, \n    color= 'black', \n    fill=\"light blue\"\n  ) +\n  labs(\n    title = \"Are pre-school even distributed in Singapore?\",\n    subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n    x = \"Pre-school density (per km sq)\",\n    y = \"Frequency\"\n  )\n\n\n\n\n\n\n\n\n\n# a scatter plot: using PreSch Density as x, PreSch Count as y, adding color by their region names + point plot\n\nggplot(\n  data = mpsz3414, \n  mapping = aes(\n    x = as.numeric(`PreSch Density`),\n    y = `PreSch Count`,\n    color = REGION_N)\n  ) +\n  geom_point()",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "01 ‘Geospatial Data Science with R’"
    ]
  },
  {
    "objectID": "in-class-exercise/ex01/in-class-ex01.html",
    "href": "in-class-exercise/ex01/in-class-ex01.html",
    "title": "01 In-class Exercise 1 (Review)",
    "section": "",
    "text": "1 Import packages & data\n\n\npacman::p_load(tidyverse, sf)\n\n\nmpsz &lt;- st_read(\n  dsn = \"data/geospatial/MPSZ-2019\",\n  layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\hengkuanxin\\SMU_Geospatial_Analytics\\in-class-exercise\\ex01\\data\\geospatial\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n\n2 Reading Data\n\n\nst_geometry(mpsz)\n\nGeometry set for 332 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\nplot(mpsz)",
    "crumbs": [
      "Home",
      "In-class Exercises",
      "01 In-class Exercise 1 (Review)"
    ]
  },
  {
    "objectID": "in-class-exercise/ex01/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "href": "in-class-exercise/ex01/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "title": "IS415 Practice Site",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "",
    "text": "(Copied from Exercise) Overview:\nIn general, thematic mapping involves the use of map symbols to visualize selected properties of geographic features that are not naturally visible, such as population, temperature, crime rate, and property prices, just to mention a few of them.\nGeovisualisation, on the other hand, works by providing graphical ideation to render a place, a phenomenon or a process visible, enabling human’s most powerful information-processing abilities – those of spatial cognition associated with our eye–brain vision system – to be directly brought to bear.\nIn this chapter, you will learn how to plot functional and truthful choropleth maps by using an R package called tmap package.\n\n1 Import packages\n\n\npacman::p_load(sf, tidyverse, tmap)\n\n\n\n2 Import data\n\n(Copied from Exercise) Two data set will be used to create the choropleth map. They are:\n\nMaster Plan 2014 Subzone Boundary (Web) (i.e. MP14_SUBZONE_WEB_PL) in ESRI shapefile format. It can be downloaded at data.gov.sg This is a geospatial data. It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2014.\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format (i.e. respopagesextod2011to2020.csv). This is an aspatial data fie. It can be downloaded at Department of Statistics, Singapore Although it does not contain any coordinates values, but it’s PA and SZ fields can be used as unique identifiers to geocode to MP14_SUBZONE_WEB_PL shapefile.\n\n\nmpsz &lt;- st_read(\n  dsn=\"data/geospatial/MasterPlan2014SubzoneBoundaryWebSHP\",\n  layer=\"MP14_SUBZONE_WEB_PL\")\n\n# mpsz\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020/respopagesextod2011to2020.csv\", show_col_types = FALSE)\n\n# popdata\n# colnames(popdata)\n\n\n\n3 Data Preparation\n\n\nCreate Data Table for Year 2020\nWe want to plot a choropleth map using year 2020 values, by joining the population table with the masterplan subzone object.\nAim: Create a data table for year 2020 values, containing columns as shown:\n\n\n\nPA\nSZ\nYOUNG\nECONOMY ACTIVE\nAGED\nTOTAL\nDEPENDENCY\n\n\n\nTherefore, we will derive values for:\n\nYOUNG: age group 0 to 4 until age group 20 to 24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age group, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time==2020) %&gt;%    # select rows where Time = 2020 \n  group_by(PA, SZ, AG) %&gt;%  # group by PA, SZ, AG\n  summarise(`POP` = sum(`Pop`)) %&gt;% # sum up the population within each group\n  ungroup() %&gt;%              # ungroup table (which allows for further calculations\n                             # on individual rows)\n  pivot_wider(               # create new columns using values from AG as names\n    names_from=AG,           # and values from POP as values\n    values_from=POP)\n\ncolnames(popdata2020)\n\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_over\"\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate(YOUNG = rowSums(.[3:6]) + rowSums(.[14])) %&gt;% # add YOUNG = sum across the row where index = [3:6] and [15] \n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13]) + rowSums(.[15])) %&gt;% # add ECONOMY ACTIVE\n  mutate(`AGED`= rowSums(.[16:21])) %&gt;% # add AGED\n  mutate(`TOTAL`= rowSums(.[3:21])) %&gt;% # add TOTAL\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %&gt;% # add DEPENDENCY\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\ncolnames(popdata2020)\n\n[1] \"PA\"             \"SZ\"             \"YOUNG\"          \"ECONOMY ACTIVE\"\n[5] \"AGED\"           \"TOTAL\"          \"DEPENDENCY\"    \n\n\n\n\nJoin attribute and geospatial data (geolocational join)\n\n# convert PA and SZ variable data to upper cases to match SUBZONE_N and PLN_AREA_N of mspz\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ),      # mutate at variables PA , SZ\n          .funs = list(toupper)) %&gt;%   # apply function list(toupper)\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\n\n# left join by SUBZONE_N = SZ\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\n\nExport/Write Data frame as RDS object\n\n# Write to a R Data Serialization(RDS) file, which is useful for storing state of objects between R sessions\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n\n\n\n\n4 Choropleth Mapping Geospatial Data Using tmap\n\n\nOverview Examples\n\nQuick Method of Visualising using qtm()\n\n# set tmap mode to \"plot\" , alternatively use view for interactive plot\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020,\n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n# mpsz_pop2020\n\n\n\nAdjusting layouts, borders, and adding furnitures (e.g. compass, scale)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\nBasic Steps to create a Choropleth Map. Using tm_polygons() vs tm_fill() + tm_borders()\n\n# st_make_valid(mpsz_pop2020)\n# tmap_options(check.and.fix = TRUE)\n# tmap_mode(\"plot\")\n\n# Step 1a: Plain Polygon\ntm1 &lt;- tm_shape(mpsz_pop2020) + tm_polygons() + tm_layout(\n  main.title = \"Step 1a: Plain Polygon\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Step 1b: Coloured Polygon using DEPENDENCY\ntm2 &lt;- tm_shape(mpsz_pop2020)+ tm_polygons(\"DEPENDENCY\") + tm_layout(\n  main.title = \"Step 1b: Coloured Polygon using DEPENDENCY\",\n  main.title.position = \"center\",\n  main.title.size = 0.7,\n  legend.width = 5.0)\n\n# Alternatively, Step 2a: Coloured Fill using DEPENDENCY instead of Polygon\ntm3 &lt;- tm_shape(mpsz_pop2020)+ tm_fill(\"DEPENDENCY\") + tm_layout(\n  main.title = \"Alternatively, Step 2a: Coloured Fill using DEPENDENCY instead of Polygon\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Step 2b: Add in borders on top of Fill\ntm4 &lt;- tm_shape(mpsz_pop2020) + tm_fill(\"DEPENDENCY\") + tm_borders(lwd = 0.1, alpha = 1) + tm_layout(\n  main.title = \"Step 2b: Add in borders on top of Fill\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Specify Data Classification (Quantile, n=5)\ntm5 &lt;- tm_shape(mpsz_pop2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"quantile\") + tm_borders(alpha = 0.5) + tm_layout(\n  main.title = \"Specify Data Classification (Quantile, n=5)\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Specify Data Classification (Equal range), n=5)\ntm6 &lt;- tm_shape(mpsz_pop2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"equal\") + tm_borders(alpha = 0.5) + tm_layout(\n  main.title = \"Specify Data Classification (Equal range), n=5)\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Plot all maps together\ntmap_arrange(tm1,tm2,tm3,tm4,tm5,tm6)\n\n\n\n\n\n\n\n\n\n\n\nDetermining Data Classification Methods and Number of Classes\n\n\n\nData Classification Guide\n\n\nGiven that Dependency ranges from 0 to 19, let us try n = 1 + 3.32 * log(20) ~= 5.\n\nggplot(data = mpsz_pop2020, \n       mapping = aes(x = `DEPENDENCY`)\n       ) +\n  geom_histogram()\n\n\n\n\n\n\n\n  # geom_dotplot()\n  # geom_freqpoly()\n\nBy plotting the distribution of DEPENDENCY, we see that there is an outlier that is significantly larger. To avoid misrepresenting the data, we should avoid equal intervals, quantile, and standard deviation. A good choice may be Jenks (Natural Breaks), or other manual classifications.\n\n# Visualise the attribute value range\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n\n\n\n\nCustom Intervals/Ranges for Data Classification\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nAdjusting palette, Inverting Palette\n\n# Using colour palette Blues instead of default\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n## Changing palette to Greens. Use -Greens for inverse colouring\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nAdjusting Legend properties\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nAdjusting tmap_style()\n\ntmap_style(\"classic\")\n\n# other available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nMore Examples\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\ntmap_style(\"white\")\n\n\n\n\n5 Showing Multiple Maps\n\n\nMethod 1: specify within tm_fill()\n\n# note two maps created, one using \"YOUNG\", the other \"AGED\"\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\nMethod 2: Using tm_facets(by = ATTRIBUTE)\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nMethod 3: Using tmap_arrange(map1, map2, …)\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n6 Specifying Specific Region in Map to Show\n\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "02 ‘Thematic Mapping and GeoVisualisation with R’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#create-data-table-for-year-2020",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#create-data-table-for-year-2020",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Create Data Table for Year 2020",
    "text": "Create Data Table for Year 2020\nWe want to plot a choropleth map using year 2020 values, by joining the population table with the masterplan subzone object.\nAim: Create a data table for year 2020 values, containing columns as shown:\n\n\n\nPA\nSZ\nYOUNG\nECONOMY ACTIVE\nAGED\nTOTAL\nDEPENDENCY\n\n\n\nTherefore, we will derive values for:\n\nYOUNG: age group 0 to 4 until age group 20 to 24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age group, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time==2020) %&gt;%    # select rows where Time = 2020 \n  group_by(PA, SZ, AG) %&gt;%  # group by PA, SZ, AG\n  summarise(`POP` = sum(`Pop`)) %&gt;% # sum up the population within each group\n  ungroup() %&gt;%              # ungroup table (which allows for further calculations\n                             # on individual rows)\n  pivot_wider(               # create new columns using values from AG as names\n    names_from=AG,           # and values from POP as values\n    values_from=POP)\n\ncolnames(popdata2020)\n\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_over\"\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate(YOUNG = rowSums(.[3:6]) + rowSums(.[14])) %&gt;% # add YOUNG = sum across the row where index = [3:6] and [15] \n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13]) + rowSums(.[15])) %&gt;% # add ECONOMY ACTIVE\n  mutate(`AGED`= rowSums(.[16:21])) %&gt;% # add AGED\n  mutate(`TOTAL`= rowSums(.[3:21])) %&gt;% # add TOTAL\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %&gt;% # add DEPENDENCY\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\ncolnames(popdata2020)\n\n[1] \"PA\"             \"SZ\"             \"YOUNG\"          \"ECONOMY ACTIVE\"\n[5] \"AGED\"           \"TOTAL\"          \"DEPENDENCY\""
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#join-attribute-and-geospatial-data-geolocational-join",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#join-attribute-and-geospatial-data-geolocational-join",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Join attribute and geospatial data (geolocational join)",
    "text": "Join attribute and geospatial data (geolocational join)\n\n# convert PA and SZ variable data to upper cases to match SUBZONE_N and PLN_AREA_N of mspz\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ),      # mutate at variables PA , SZ\n          .funs = list(toupper)) %&gt;%   # apply function list(toupper)\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\n\n# left join by SUBZONE_N = SZ\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#exportwrite-data-frame-as-rds-object",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#exportwrite-data-frame-as-rds-object",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Export/Write Data frame as RDS object",
    "text": "Export/Write Data frame as RDS object\n\n# Write to a R Data Serialization(RDS) file, which is useful for storing state of objects between R sessions\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#overview-examples",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#overview-examples",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Overview Examples",
    "text": "Overview Examples\n\nQuick Method of Visualising using qtm()\n\n# set tmap mode to \"plot\" , alternatively use view for interactive plot\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020,\n    fill = \"DEPENDENCY\")\n\n\n\n# mpsz_pop2020\n\n\n\nAdjusting layouts, borders, and adding furnitures (e.g. compass, scale)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\nBasic Steps to create a Choropleth Map. Using tm_polygons() vs tm_fill() + tm_borders()\n\n# st_make_valid(mpsz_pop2020)\n# tmap_options(check.and.fix = TRUE)\n# tmap_mode(\"plot\")\n\n# Step 1a: Plain Polygon\ntm1 &lt;- tm_shape(mpsz_pop2020) + tm_polygons() + tm_layout(\n  main.title = \"Step 1a: Plain Polygon\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Step 1b: Coloured Polygon using DEPENDENCY\ntm2 &lt;- tm_shape(mpsz_pop2020)+ tm_polygons(\"DEPENDENCY\") + tm_layout(\n  main.title = \"Step 1b: Coloured Polygon using DEPENDENCY\",\n  main.title.position = \"center\",\n  main.title.size = 0.7,\n  legend.width = 5.0)\n\n# Alternatively, Step 2a: Coloured Fill using DEPENDENCY instead of Polygon\ntm3 &lt;- tm_shape(mpsz_pop2020)+ tm_fill(\"DEPENDENCY\") + tm_layout(\n  main.title = \"Alternatively, Step 2a: Coloured Fill using DEPENDENCY instead of Polygon\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Step 2b: Add in borders on top of Fill\ntm4 &lt;- tm_shape(mpsz_pop2020) + tm_fill(\"DEPENDENCY\") + tm_borders(lwd = 0.1, alpha = 1) + tm_layout(\n  main.title = \"Step 2b: Add in borders on top of Fill\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Specify Data Classification (Quantile, n=5)\ntm5 &lt;- tm_shape(mpsz_pop2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"quantile\") + tm_borders(alpha = 0.5) + tm_layout(\n  main.title = \"Specify Data Classification (Quantile, n=5)\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Specify Data Classification (Equal range), n=5)\ntm6 &lt;- tm_shape(mpsz_pop2020) + tm_fill(\"DEPENDENCY\", n = 5, style = \"equal\") + tm_borders(alpha = 0.5) + tm_layout(\n  main.title = \"Specify Data Classification (Equal range), n=5)\",\n  main.title.position = \"center\",\n  main.title.size = 0.7)\n\n# Plot all maps together\ntmap_arrange(tm1,tm2,tm3,tm4,tm5,tm6)"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#determining-data-classification-methods-and-number-of-classes",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#determining-data-classification-methods-and-number-of-classes",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Determining Data Classification Methods and Number of Classes",
    "text": "Determining Data Classification Methods and Number of Classes\n\n\n\nData Classification Guide\n\n\nGiven that Dependency ranges from 0 to 19, let us try n = 1 + 3.32 * log(20) ~= 5.\n\nggplot(data = mpsz_pop2020, \n       mapping = aes(x = `DEPENDENCY`)\n       ) +\n  geom_histogram()\n\n\n\n  # geom_dotplot()\n  # geom_freqpoly()\n\nBy plotting the distribution of DEPENDENCY, we see that there is an outlier that is significantly larger. To avoid misrepresenting the data, we should avoid equal intervals, quantile, and standard deviation. A good choice may be Jenks (Natural Breaks), or other manual classifications.\n\n# Visualise the attribute value range\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#custom-intervalsranges-for-data-classification",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#custom-intervalsranges-for-data-classification",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Custom Intervals/Ranges for Data Classification",
    "text": "Custom Intervals/Ranges for Data Classification\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#adjusting-palette-inverting-palette",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#adjusting-palette-inverting-palette",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Adjusting palette, Inverting Palette",
    "text": "Adjusting palette, Inverting Palette\n\n# Using colour palette Blues instead of default\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n## Changing palette to Greens. Use -Greens for inverse colouring\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#adjusting-legend-properties",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#adjusting-legend-properties",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Adjusting Legend properties",
    "text": "Adjusting Legend properties\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#adjusting-tmap_style",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#adjusting-tmap_style",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Adjusting tmap_style()",
    "text": "Adjusting tmap_style()\n\ntmap_style(\"classic\")\n\n# other available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#more-examples",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#more-examples",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "More Examples",
    "text": "More Examples\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\ntmap_style(\"white\")"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#method-1-specify-within-tm_fill",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#method-1-specify-within-tm_fill",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Method 1: specify within tm_fill()",
    "text": "Method 1: specify within tm_fill()\n\n# note two maps created, one using \"YOUNG\", the other \"AGED\"\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#method-2-using-tm_facetsby-attribute",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#method-2-using-tm_facetsby-attribute",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Method 2: Using tm_facets(by = ATTRIBUTE)",
    "text": "Method 2: Using tm_facets(by = ATTRIBUTE)\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands-on-exercise/ex02/hands-on-ex02.html#method-3-using-tmap_arrangemap1-map2",
    "href": "hands-on-exercise/ex02/hands-on-ex02.html#method-3-using-tmap_arrangemap1-map2",
    "title": "Exercise 02 ‘Thematic Mapping and GeoVisualisation with R’",
    "section": "Method 3: Using tmap_arrange(map1, map2, …)",
    "text": "Method 3: Using tmap_arrange(map1, map2, …)\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "in-class-exercise/ex02/in-class-ex02.html",
    "href": "in-class-exercise/ex02/in-class-ex02.html",
    "title": "02 In-class Exercise 2 (Review)",
    "section": "",
    "text": "# load packages\n\npacman::p_load(sf, tidyverse, tmap)\n\n#pacman::p_load(sf, tidyverse, ggstatsplot, tmap)\n\n\n\n\nWe are going to import the Master Plan 2014 Subzone Boundary Web (file format .shp and .kml) retrieved from data.gov.sg.\nThis code chunk imports the shapefile data\n\nmpsz_shp &lt;- st_read(dsn=\"data/geospatial/MasterPlan2014SubzoneBoundaryWebSHP\", \n                    layer=\"MP14_SUBZONE_WEB_PL\")\n\nIn RStudio, check the Help tab to search for library functions, it will show you the input arguments and the output.\n\n\n\nWhenever you import data, make sure to view the data and understand what data types, data formats, crs (coordinate reference systems), geometry type, and so on.\n\nclass(mpsz_shp)\n\n[1] \"sf\"         \"data.frame\"\n\n\nNote: when reading data types:\n\nint : an integer\nnum : numerical; can be any real number\nchr : characters - geometry : sf’s geometry data.\n\nE.g. “sfc_MULTIPOLYGONS” if the package detects multipolygons.\n\n\nrefer to basic data types in R\n\n\n\nThis code chunk tries to import the kml data\n\n# mpsz_kml &lt;- st_read(\"data/geospatial/MasterPlan2014SubzoneBoundaryWebKML.kml\")\n# This data file cannot be used; The data source is corrupted.\n\nThere might be a reasons why the kml cannot be used: (1) it is a zipped file, or (2) the file got tampered/corrupted during the uploading process.\nIf you want to convert to another file format, you can generate it using sf::st_write().\n\n\n\n\n#| output: false\n\nst_write(mpsz_shp,\n         \"data/geospatial/MP14_SUBZONE_WEB_PL.kml\",\n         delete_dsn = TRUE) # delete old file if exists.\n\nDeleting source `data/geospatial/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting layer `MP14_SUBZONE_WEB_PL' to data source \n  `data/geospatial/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon.",
    "crumbs": [
      "Home",
      "In-class Exercises",
      "02 In-class Exercise 2 (Review)"
    ]
  },
  {
    "objectID": "in-class-exercise/ex02/in-class-ex02.html#working-with-master-plan-planning-sub-zone-data",
    "href": "in-class-exercise/ex02/in-class-ex02.html#working-with-master-plan-planning-sub-zone-data",
    "title": "02 In-class Exercise 2 (Review)",
    "section": "",
    "text": "# load packages\n\npacman::p_load(sf, tidyverse, tmap)\n\n#pacman::p_load(sf, tidyverse, ggstatsplot, tmap)\n\n\n\n\nWe are going to import the Master Plan 2014 Subzone Boundary Web (file format .shp and .kml) retrieved from data.gov.sg.\nThis code chunk imports the shapefile data\n\nmpsz_shp &lt;- st_read(dsn=\"data/geospatial/MasterPlan2014SubzoneBoundaryWebSHP\", \n                    layer=\"MP14_SUBZONE_WEB_PL\")\n\nIn RStudio, check the Help tab to search for library functions, it will show you the input arguments and the output.\n\n\n\nWhenever you import data, make sure to view the data and understand what data types, data formats, crs (coordinate reference systems), geometry type, and so on.\n\nclass(mpsz_shp)\n\n[1] \"sf\"         \"data.frame\"\n\n\nNote: when reading data types:\n\nint : an integer\nnum : numerical; can be any real number\nchr : characters - geometry : sf’s geometry data.\n\nE.g. “sfc_MULTIPOLYGONS” if the package detects multipolygons.\n\n\nrefer to basic data types in R\n\n\n\nThis code chunk tries to import the kml data\n\n# mpsz_kml &lt;- st_read(\"data/geospatial/MasterPlan2014SubzoneBoundaryWebKML.kml\")\n# This data file cannot be used; The data source is corrupted.\n\nThere might be a reasons why the kml cannot be used: (1) it is a zipped file, or (2) the file got tampered/corrupted during the uploading process.\nIf you want to convert to another file format, you can generate it using sf::st_write().\n\n\n\n\n#| output: false\n\nst_write(mpsz_shp,\n         \"data/geospatial/MP14_SUBZONE_WEB_PL.kml\",\n         delete_dsn = TRUE) # delete old file if exists.\n\nDeleting source `data/geospatial/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting layer `MP14_SUBZONE_WEB_PL' to data source \n  `data/geospatial/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon.",
    "crumbs": [
      "Home",
      "In-class Exercises",
      "02 In-class Exercise 2 (Review)"
    ]
  },
  {
    "objectID": "in-class-exercise/ex02/in-class-ex02.html#choosing-good-data-sets",
    "href": "in-class-exercise/ex02/in-class-ex02.html#choosing-good-data-sets",
    "title": "02 In-class Exercise 2 (Review)",
    "section": "3. Choosing Good Data sets",
    "text": "3. Choosing Good Data sets\n\n3.1 Pre-school locations\ndownload and load the preschool locations from data.gov.sg\nTO BE COMPLETED\n\n#import data set\npreschool_kml &lt;- st_read(dsn=\"data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\hengkuanxin\\SMU_Geospatial_Analytics\\in-class-exercise\\ex02\\data\\geospatial\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n# preschool_geojson &lt;- st_read(\"data/geospatial/PreschoolsLocation.geojson\")\n\n\n\n3.2 Masterplan 2019 Sub-zone\n\n#import data set\nmpsz19_kml &lt;- st_read(\"data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n\nmpsz19_shp &lt;- st_read(dsn=\"data/geospatial/MPSZ-2019\",\n                      layer=\"MPSZ-2019\")\n\nNote the differences: both have 332 features, but one has 2+1 fields, the other has 6+1 fields. KML has nested multiple attributes within 1 column. The KML file format in this context is harder to use than the SHP file format.\n\n\n3.3 Transforming the CRS\n\nmpsz19_shp_3414 &lt;- mpsz19_shp %&gt;%\n  st_transform(crs=3414)\n\nEPSG:3414 refers to Singapore’s projected coordinate system (SVY21), as opposed to WGS84. A projected coordinate system uses distances measure, rather than degrees (latitude, longitude)",
    "crumbs": [
      "Home",
      "In-class Exercises",
      "02 In-class Exercise 2 (Review)"
    ]
  },
  {
    "objectID": "in-class-exercise/ex02/in-class-ex02.html#working-with-population-data",
    "href": "in-class-exercise/ex02/in-class-ex02.html#working-with-population-data",
    "title": "02 In-class Exercise 2 (Review)",
    "section": "4.0 Working with Population Data",
    "text": "4.0 Working with Population Data\n\npop2023 &lt;- read_csv(\"data/aspatial/respopagesextod2023.csv\", )\n\n# show column data types\nspec(pop2023)\n\nNote: Ease of use of data: see how the columns and data are categorised between different the different data sets respopagesextod2023.csv and respopagesextod2023.xlsx. Check the other data sets: respopagesexfa2023.csv\n\npop2023_sum &lt;- pop2023 %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()\n\ncolnames(pop2023_sum)\n\n[1] \"PA\"  \"SZ\"  \"AG\"  \"POP\"\n\npop2023_sum &lt;- pop2023_sum %&gt;%\n  pivot_wider(names_from = `AG`,\n              values_from = `POP`)\n\ncolnames(pop2023_sum)\n\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_Over\"\n\n\nNote: tidyverse is a collection of packages for data science, also called a disjointed integrated packages. The separate packages maintained separately and do not contain same function names. Collectively, they might conflict with Base R functions, however; e.g. dpylr::filter().\n\npop2023_sum &lt;- pop2023_sum %&gt;%\n  mutate(YOUNG = rowSums(.[3:6]) + rowSums(.[14])) %&gt;% # add YOUNG = sum across the row where index = [3:6] and [15] \n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13]) + rowSums(.[15])) %&gt;% # add ECONOMY ACTIVE\n  mutate(`AGED`= rowSums(.[16:21])) %&gt;% # add AGED\n  mutate(`TOTAL`= rowSums(.[3:21])) %&gt;% # add TOTAL\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %&gt;% # add DEPENDENCY\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\ncolnames(pop2023_sum)\n\n[1] \"PA\"             \"SZ\"             \"YOUNG\"          \"ECONOMY ACTIVE\"\n[5] \"AGED\"           \"TOTAL\"          \"DEPENDENCY\"    \n\n\n\nJoin together population data with geospatial data (masterplan sub-zone)\n\n# convert PA and SZ variable data to upper cases to match SUBZONE_N and PLN_AREA_N of mspz\npop2023_sum &lt;- pop2023_sum %&gt;%\n  mutate_at(.vars = vars(PA, SZ),      # mutate at variables PA , SZ\n          .funs = list(toupper)) %&gt;%   # apply function list(toupper)\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\n\n# left join by SUBZONE_N = SZ\nmpsz19_shp_3414 &lt;- left_join(mpsz19_shp_3414, pop2023_sum,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))",
    "crumbs": [
      "Home",
      "In-class Exercises",
      "02 In-class Exercise 2 (Review)"
    ]
  },
  {
    "objectID": "in-class-exercise/ex02/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "href": "in-class-exercise/ex02/data/geospatial/MPSZ-2019/MPSZ-2019.html",
    "title": "R for Geospatial Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "hands-on-exercise/hands-on-ex-intro.html",
    "href": "hands-on-exercise/hands-on-ex-intro.html",
    "title": "00 Hands-On Exercises Introduction",
    "section": "",
    "text": "This section showcases my weekly attempts at geospatial analytics for my course.\nEach exercise is focused on a central topic; e.g. Hands-on exercise 02 ‘Thematic Mapping and GeoVisualisation with R’ corresponding to the topic of the assignment of the week.\nAll analyses were done using R programming language and are for learning purposes only.",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "00 Hands-On Exercises Introduction"
    ]
  },
  {
    "objectID": "in-class-exercise/in-class-ex-intro.html",
    "href": "in-class-exercise/in-class-ex-intro.html",
    "title": "00 In-Class Exercises Introduction",
    "section": "",
    "text": "This section showcases my practices and additional notes during my weekly classes, which are mainly reviews of the hands on exercises.\nAll analyses were done using R programming language and are for learning purposes only.",
    "crumbs": [
      "Home",
      "In-class Exercises",
      "00 In-Class Exercises Introduction"
    ]
  },
  {
    "objectID": "index.html#new-posts",
    "href": "index.html#new-posts",
    "title": "R for Geospatial Analytics",
    "section": "New Posts",
    "text": "New Posts"
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_01.html",
    "href": "hands-on-exercise/ex03/hands-on-ex03_01.html",
    "title": "03 (Part 1) ‘1st Order Spatial Point Patterns Analysis Methods’",
    "section": "",
    "text": "(Copied from Exercise)",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 1) ‘1st Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_01.html#overview",
    "href": "hands-on-exercise/ex03/hands-on-ex03_01.html#overview",
    "title": "03 (Part 1) ‘1st Order Spatial Point Patterns Analysis Methods’",
    "section": "Overview:",
    "text": "Overview:\nSpatial Point Pattern Analysis is the evaluation of the pattern or distribution, of a set of points on a surface. The point can be location of:\n\nevents such as crime, traffic accident and disease onset, or\nbusiness services (coffee and fastfood outlets) or facilities such as childcare and eldercare.\n\nUsing appropriate functions of spatstat, this hands-on exercise aims to discover the spatial point processes of childcare centres in Singapore.\nThe specific questions we would like to answer are as follows:\n\nAre the childcare centres in Singapore randomly distributed throughout the country?\nIf the answer is not, then the next logical question is where are the locations with higher concentration of childcare centres?\n\n\nData Used\nTo provide answers to the questions above, three data sets will be used. They are:\n\nCHILDCARE, a point feature data providing both location and attribute information of childcare centres. It was downloaded from Data.gov.sg and is in geojson format.\nMP14_SUBZONE_WEB_PL, a polygon feature data providing information of URA 2014 Master Plan Planning Subzone boundary data. It is in ESRI shapefile format. This data set was also downloaded from Data.gov.sg.\nCostalOutline, a polygon feature data showing the national boundary of Singapore. It is provided by SLA and is in ESRI shapefile format.\n\n\n\nPackages Used\nIn this hands-on exercise, five R packages will be used, they are:\n\nsf, a relatively new R package specially designed to import, manage and process vector-based geospatial data in R.\nspatstat, which has a wide range of useful functions for point pattern analysis. In this hands-on exercise, it will be used to perform 1st- and 2nd-order spatial point patterns analysis and derive kernel density estimation (KDE) layer.\nraster which reads, writes, manipulates, analyses and model of gridded spatial data (i.e. raster). In this hands-on exercise, it will be used to convert image output generate by spatstat into raster format.\nmaptools which provides a set of tools for manipulating geographic data. In this hands-on exercise, we mainly use it to convert Spatial objects into ppp format of spatstat.\ntmap which provides functions for plotting cartographic quality static point patterns maps or interactive maps by using leaflet API.\n\nThe above is a copy from the exercise overview from workbook",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 1) ‘1st Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_01.html#import-packages",
    "href": "hands-on-exercise/ex03/hands-on-ex03_01.html#import-packages",
    "title": "03 (Part 1) ‘1st Order Spatial Point Patterns Analysis Methods’",
    "section": "1 Import Packages",
    "text": "1 Import Packages\n\npacman::p_load(sf, spatstat, raster, tmap, rvest, tidyverse)",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 1) ‘1st Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_01.html#import-data",
    "href": "hands-on-exercise/ex03/hands-on-ex03_01.html#import-data",
    "title": "03 (Part 1) ‘1st Order Spatial Point Patterns Analysis Methods’",
    "section": "2 Import Data",
    "text": "2 Import Data\n\n# childcare services data\nchildcare_sf &lt;- st_read(dsn=\"data/geospatial/child-care-services-geojson.geojson\")\n\n# coastal outline data\nsg_sf &lt;- st_read(dsn=\"data/geospatial\", layer=\"CostalOutline\")\n\n# masterplan subzone data\nmpsz_sf &lt;- st_read(dsn=\"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\n# notice childcare_sf is in WGS84, transform it into SV21:\nchildcare_sf &lt;- childcare_sf %&gt;% st_transform(crs=3414)\n\n\nChecking Attribute Information\n* Notice how the attributes of childcare_sf is nested within html syntax. Instead of using BeautifulSoup4 in Python, in R we can use the rvest package to parse the html data. (Converted my python function to R with help of ChatGPT)\n\nIn order to read the attributes, we need to first isolate the ‘Description’ attribute, and read line by line using each &lt;tr&gt;.\nWithin each line, identify &lt;th&gt; and &lt;td&gt;. The attribute name is located within a pair of &lt;th&gt;, and value is located within a pair of &lt;td&gt;.\n\nNOTE: list() in R can behave as both an array and a hashtable, the equivalent of which are list() and dictionary() in Python respectively.\n\nparse_html_table &lt;- function(html) {\n  # read the HTML content\n  rows &lt;- read_html(html) %&gt;% html_nodes(\"tr\")\n  \n  # initialise an empty list to store data\n  data &lt;- list()\n  \n  # read row by row\n  for (row in rows) {\n    # find all columns in the row\n    cols &lt;- html_nodes(row, xpath = \".//th|.//td\")\n    \n    # if exactly 2 columns, add them to the data list\n    if (length(cols) == 2) {\n      \n      ## get KEY-VALUE pair\n      key &lt;- html_text(cols[1], trim = TRUE)\n      value &lt;- html_text(cols[2], trim = TRUE)\n      data[[key]] &lt;- value\n    }\n  }\n  \n  return(data)\n}\n\nchildcare_sf$Parsed &lt;- lapply(X=childcare_sf$Description, FUN=parse_html_table)\n\nExtracting attribute NAME from Parsed column\n\n# head(childcare_sf$Parsed,n=5)\n# childcare_sf$Parsed[[1]]$NAME\n\n# Apply function where we retrieve\nchildcare_sf$NAME &lt;- lapply(X=childcare_sf$Parsed, FUN=function(x) x$NAME) %&gt;% \n  # unlist to turn list into vector\n  unlist()\n\n# childcare_sf$NAME\nchildcare_sf &lt;- childcare_sf %&gt;% select(`NAME`) # Keep Name only, since other attributes are not used\n\n\n# show result\nhead(childcare_sf)\n\nSimple feature collection with 6 features and 1 field\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 20644.07 ymin: 29900.09 xmax: 41217.74 ymax: 45716.7\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n                                      NAME                      geometry\n1 AVERBEL CHILD DEVELOPMENT CENTRE PTE LTD  POINT Z (27976.73 45716.7 0)\n2                                AWWA LTD.    POINT Z (25824 29900.09 0)\n3             BABIES BY-THE-PARK PTE. LTD. POINT Z (31399.04 37416.36 0)\n4             Baby Elk Infant Care Pte Ltd  POINT Z (29268.43 40942.1 0)\n5          BABYPLANET MONTESSORI PTE. LTD. POINT Z (41217.74 33554.94 0)\n6                    BAMBINI CHILDCARE LLP POINT Z (20644.07 36118.78 0)\n\n\n\n\nCheck CRS are all consistent– All EPSG:3414\n\n#| output: false\n\n# st_geometry(sg_sf)\n# st_geometry(mpsz_sf)\n# st_geometry(childcare_sf)\nst_crs(sg_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNote: even though sg_sf and mpsz_sf is using SVY21, and have its coordinates in meters, they do not actually record itself as EPSG:3414, instead the CRS information shows EPSG:9001. In order to ensure consistency and a clean data, let us set the CRS to 3414.\n\n# change CRS to EPSG:3414\nst_crs(sg_sf) &lt;- 3414\nst_crs(mpsz_sf) &lt;- 3414\n\n\n\nQuick View of Data\n\ntmap_mode(\"plot\")\nqtm(sg_sf) +\nqtm(mpsz_sf) +\nqtm(childcare_sf)\n\n\n\n\n\n\n\n\n\n\nQuick Interactive Plot of Data\nWe can also use tmap ‘view’ mode to plot our data layer on an interactive map, which uses Leaflet for R, where Leaflet is an open-source JavaScript library for interactive maps. In this mode, we can drag and zoom around and click on the features of our data layer to query its attribute information.\n\ntmap_mode('view')\ntm_shape(childcare_sf)+\n  tm_dots()\n\n\n\n\n# reset back  to 'plot' mode\ntmap_mode('plot')\n\nNote from Instructor:\nReminder: Always remember to switch back to plot mode after the interactive map. This is because, each interactive mode will consume a connection. You should also avoid displaying ecessive numbers of interactive maps (i.e. not more than 10) in one RMarkdown document when publish on Netlify.",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 1) ‘1st Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_01.html#geospatial-data-wrangling",
    "href": "hands-on-exercise/ex03/hands-on-ex03_01.html#geospatial-data-wrangling",
    "title": "03 (Part 1) ‘1st Order Spatial Point Patterns Analysis Methods’",
    "section": "3 Geospatial Data Wrangling",
    "text": "3 Geospatial Data Wrangling\n\n[Handling sp objects (Optional)] Convert sf DataFrame to sp’s Spatial* class (and Spatial*DataFrame).\n“Many geospatial analysis packages require the input geospatial data in sp’s Spatial*classes. But it is not always required, you can use sf instead.”\n\n# The code chunk below uses as_Spatial() of sf package to convert the three geospatial data from simple feature data frame to sp’s Spatial* class.\n\n# childcare &lt;- as_Spatial(from=childcare_sf)\n# mpsz &lt;- as_Spatial(from=mpsz_sf)\n# sg &lt;- as_Spatial(from=sg_sf)\n\n# also see different method\nchildcare &lt;- as(childcare_sf,\"Spatial\")\nmpsz &lt;- as(mpsz_sf,\"Spatial\")\nsg &lt;- as(sg_sf,\"Spatial\")\n\nShowing the output information\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 1\nnames       :                    NAME \nmin values  :    3-IN-1 FAMILY CENTRE \nmax values  : ZEE SCHOOLHOUSE PTE LTD \n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\n\n\n\n[Handling sp objects (Optional)] Converting the Spatial* class into generic sp format\n“spatstat requires the analytical data in ppp object form. There is no direct way to convert a Spatial* classes into ppp object. We need to convert the Spatial classes* into a Spatial(sp) object first.”\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\n\nShowing the output information\n\nchildcare_sp\n\nclass       : SpatialPoints \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\nAt a glance, we can see that by converting Spatial*DataFrame to SpatialPoints or SpatialPolygons, we have lost all attribute information except the geometry features.\n\n\n[Handling sp objects (Optional)] Converting the generic sp format into spatstat’s ppp format\nNow, we will use as.ppp() function of spatstat to convert the spatial data into spatstat’s ppp object format\n(ChatGPT) Note a few things about the as.ppp() function:\n\nObservation Window: The as.ppp function needs an observation window to define the spatial context. Without explicitly setting this, the function might use a default or incorrect window, leading to inaccurate spatial analysis.\nCoordinate Extraction: The as.ppp function expects coordinates in a specific format. If childcare_sf is not properly converted, the function might misinterpret the data, resulting in errors or incorrect point patterns.\nData Integrity: Direct conversion without proper handling might ignore or misinterpret additional attributes or marks associated with the points, leading to loss of important information.\n\n\n# Check for duplicated points within original sf\nduplicated_coords &lt;- childcare_sf %&gt;% st_coordinates() %&gt;% duplicated()\nsum(duplicated_coords)\n\n[1] 74\n\n\n\n# childcare_ppp &lt;- as.ppp(childcare_sf)\n# childcare_ppp &lt;- as.ppp(x=childcare_sf$geometry, W=NULL)\nchildcare_ppp &lt;- as.ppp(st_coordinates(childcare_sf), st_bbox(childcare_sf)) %&gt;% unmark()\n\n# # Alternatively, to include attributes, use:\n# # Extract coordinates and attributes\n# coords &lt;- st_coordinates(childcare_sf)\n# # attributes &lt;- st_drop_geometry(childcare_sf)\n# # Define the observation window\n# bbox &lt;- st_bbox(childcare_sf)\n# window &lt;- owin(xrange = c(bbox[\"xmin\"], bbox[\"xmax\"]), yrange = c(bbox[\"ymin\"], bbox[\"ymax\"]))\n# # Create the ppp object with marks\n# childcare_ppp &lt;- ppp(x = coords[,1], y = coords[,2], window = window)\n\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\nCheck Whether Data is accurately converted into PPP object\n\noriginal_coords &lt;- st_coordinates(childcare_sf)\nppp_coords &lt;- cbind(childcare_ppp$x, childcare_ppp$y)\nall.equal(original_coords, ppp_coords)\n\n[1] \"Attributes: &lt; Length mismatch: comparison on first 1 components &gt;\"     \n[2] \"Attributes: &lt; Component \\\"dim\\\": Mean relative difference: 0.3333333 &gt;\"\n[3] \"Numeric: lengths (4635, 3090) differ\"                                  \n\n# identical(original_coords, ppp_coords)\n\nNote original_coords and ppp_coords have different precision of the coordinates when converted in this way.\n\n\nQuick View of PPP Plot\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\n\n\n\nSee Summary Stats of Planar Point Point (PPP)\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 11 decimal places\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n(Copy from Exercise) Prof’s Note: Notice the warning message about duplicates. In spatial point patterns analysis an issue of significant is the presence of duplicates. The statistical methodology used for spatial point patterns processes is based largely on the assumption that process are simple, that is, that the points cannot be coincident.\n\n\n\nHandling duplicated points\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\n(Copy from Exercise) To count the number of co-indicence point, we will use the multiplicity() function as shown in the code chunk below.\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\n(Copy from Exercise) If we want to know how many locations have more than one point event, we can use the code chunk below.\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 128\n\n\nThe output shows that there are 128 duplicated point events.\n\nduplicated_coords &lt;- st_coordinates(childcare_sf) %&gt;% duplicated()\nduplicated_points &lt;- childcare_sf[duplicated_coords,]\nnot_duplicated_points &lt;- childcare_sf[!duplicated_coords,]\n\ntmap_mode('view')\n\ntm_shape(childcare_sf) +\n  tm_dots(alpha=0.4,col =\"black\",size=0.05) +\ntm_shape(duplicated_points) +\n  tm_dots(alpha=1,col =\"red\",size=0.05)\n\n\n\n\ntmap_mode('plot')\n\n(Copied from Exercise) There are three ways to overcome this problem.\n\nDelete duplicates. But that will also mean that some useful point events will be lost.\nUse jittering, which will add a small perturbation to the duplicate points so that they do not occupy the exact same space.\nMake each point “unique” and then attach the duplicates of the points to the patterns as marks, as attributes of the points. Then you would need analytical techniques that take into account these marks.\n\nThe code chunk below implements the jittering approach.\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nsum(duplicated(childcare_ppp_jit))\n\n[1] 0\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\n\nCreating owin object\n(Copied from Exercise) When analysing spatial point patterns, it is a good practice to confine the analysis with a geographical area like Singapore boundary. In spatstat, an object called owin is specially designed to represent this polygonal region.\nThe code chunk below is used to covert sg SpatialPolygon object into owin object of spatstat.\n\nsg_owin &lt;- as.owin(sg_sf)\nplot(sg_owin)\n\n\n\n\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\n\nCombining point events object and owin object\n(Copied from Exercise) In this last step of geospatial data wrangling, we will extract childcare events that are located within Singapore by using the code chunk below\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.129929e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 11 decimal places\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\nplot(childcareSG_ppp)",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 1) ‘1st Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_01.html#first-order-spatial-point-patterns-analysis",
    "href": "hands-on-exercise/ex03/hands-on-ex03_01.html#first-order-spatial-point-patterns-analysis",
    "title": "03 (Part 1) ‘1st Order Spatial Point Patterns Analysis Methods’",
    "section": "4 First-order Spatial Point Patterns Analysis",
    "text": "4 First-order Spatial Point Patterns Analysis\nIn this section, you will learn how to perform first-order SPPA by using spatstat package. The hands-on exercise will focus on:\n\nderiving kernel density estimation (KDE) layer for visualising and exploring the intensity of point processes,\nperforming Confirmatory Spatial Point Patterns Analysis by using Nearest Neighbour statistics.\n\n\nKernel Density Estiation (KDE)\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                              kernel=\"gaussian\")\n\n\nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nNote: The density values of the output range from 0 to 0.000035 which is way too small to comprehend. This is because the default unit of measurement of svy21 is in meters. As a result, the density values computed is in “number of points per square meter”.\n\n# Retrieving bandwidth of the kde layer\n\nbw &lt;- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n298.4095 \n\n\n\n\nRescaling KDE Values (since current values are too small)\n\nchildcareSG_ppp.km &lt;- rescale.ppp(childcareSG_ppp, 1000, \"km\")\n\n\nkde_childcareSG.bw &lt;- density(childcareSG_ppp.km, \n                              sigma=bw.diggle, \n                              edge=TRUE, \n                              kernel=\"gaussian\")\n\n\nplot(kde_childcareSG.bw)\n\n\n\n\n\n\n\n\nThe value now ranges from 0 to 25+, showing number of points per km square.\n\n\nWorking with different automatic bandwidth methods\n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.2984095 \n\n\n\nbw.CvL(childcareSG_ppp.km)\n\n   sigma \n4.543278 \n\n\n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.224898 1.450966 \n\n\n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.3897114 \n\n\n\nComparing Plots between using bw.diggle vs bw.ppl\n\nkde_childcareSG.ppl &lt;- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")\n\n\n\n\n\n\n\n\n\n\n\nWorking with different kernel methods\nBy default, the kernel method used in density.ppp() is gaussian. But there are three other options, namely: Epanechnikov, Quartic and Dics.\n\npar(mfrow=c(2,2))\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 1) ‘1st Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_01.html#fixed-and-adaptive-kde",
    "href": "hands-on-exercise/ex03/hands-on-ex03_01.html#fixed-and-adaptive-kde",
    "title": "03 (Part 1) ‘1st Order Spatial Point Patterns Analysis Methods’",
    "section": "5 Fixed and Adaptive KDE",
    "text": "5 Fixed and Adaptive KDE\nNext, you will compute a KDE layer by defining a bandwidth of 600 meter. Notice that in the code chunk below, the sigma value used is 0.6. This is because the unit of measurement of childcareSG_ppp.km object is in kilometer, hence the 600m is 0.6km.\n\nkde_childcareSG_600 &lt;- \n  density(childcareSG_ppp.km, \n          sigma=0.6, \n          edge=TRUE, \n          kernel=\"gaussian\")\n\nplot(kde_childcareSG_600)\n\n\n\n\n\n\n\n\n\nComputing KDE by using adaptive bandwidth\nFixed bandwidth method is very sensitive to highly skew distribution of spatial point patterns over geographical units for example **urban** versus **rural**. One way to overcome this problem is by using adaptive bandwidth instead.\n\nIn this section, you will learn how to derive adaptive kernel density estimation by using [density.adaptive()](https://rdrr.io/cran/spatstat/man/adaptive.density.html) of **spatstat**.\n\nkde_childcareSG_adaptive &lt;- \n  adaptive.density(childcareSG_ppp.km, \n                   method=\"kernel\")\n\n\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\n\n\nWe can compare the fixed and adaptive kernel density estimation outputs by using the code chunk below.\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\n\n\n\n\nConverting KDE output into grid object\n\nclass(kde_childcareSG.bw)\n\n[1] \"im\"\n\n\n\ngridded_kde_childcareSG_bw &lt;- \n  #raster(kde_childcareSG.bw) %&gt;% \n  as(kde_childcareSG.bw,\"SpatialGridDataFrame\")\n  \n# as.SpatialGridDataFrame.im(kde_childcareSG.bw) \n# this uses maptools, use maptools::as.SpatialGridDataFrame.im(kde_childcareSG.bw)\n\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\n\nConverting gridded output into raster\n\nkde_childcareSG_bw_raster &lt;- raster(kde_childcareSG.bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : layer \nvalues     : -8.476185e-15, 28.51831  (min, max)\n\n\nNotice that the crs property is NA.\n\n\nAssigning projection systems\n\n# function to set the CRS of a Raster* object\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -8.476185e-15, 28.51831  (min, max)\n\n\n\n\nVisualising the RasterLayer in tmap\nFinally, we will display the raster in cartographic quality map using tmap package.\n\ntmap_mode(\"plot\")\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(col = \"layer\", palette = \"viridis\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = TRUE)\n\n\n\n\n\n\n\n\n\n\nComparing the Spatial Point Patterns using KDE\nIn this section, you will learn how to compare KDE of childcare at Ponggol, Tampines, Chua Chu Kang and Jurong West planning areas.\nWe will extract the relevant Study Areas.\n\npunggol &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntampines &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\nchoachukang &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njurongwest &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n\n\n# par(mfrow=c(2,2))\n# plot(punggol, main=\"PUNGGOL\")\nplot(punggol)\n\n\n\n\n\n\n\n\n\n# plot(tm, main = \"Tampines\")\nplot(tampines)\n\n\n\n\n\n\n\n\n\n# plot(ck, main = \"Choa Chu Kang\")\nplot(choachukang)\n\n\n\n\n\n\n\n\n\n# plot(jw, main = \"Jurong West\")\nplot(jurongwest)\n\n\n\n\n\n\n\n\n\npg_owin = as.owin(punggol)\ntm_owin = as.owin(tampines)\nck_owin = as.owin(choachukang)\njw_owin = as.owin(jurongwest)\n\n\n\nCombining childcare points and the study area\n\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\n\nchildcare_pg_ppp_km = rescale.ppp(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp_km = rescale.ppp(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp_km = rescale.ppp(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp_km = rescale.ppp(childcare_jw_ppp, 1000, \"km\")\n\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp_km, main=\"Punggol\")\nplot(childcare_tm_ppp_km, main=\"Tampines\")\nplot(childcare_ck_ppp_km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp_km, main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\nComputing KDE\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp_km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\n\n\n\n\n\n\n\n\n\n\nComputing fixed bandwidth KDE\nFor comparison purposes, we will use 250m as the bandwidth.\n\npar(mfrow=c(2,2))\nplot(density(childcare_ck_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\nplot(density(childcare_pg_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp_km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 1) ‘1st Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_01.html#nearest-neighbour-analysis",
    "href": "hands-on-exercise/ex03/hands-on-ex03_01.html#nearest-neighbour-analysis",
    "title": "03 (Part 1) ‘1st Order Spatial Point Patterns Analysis Methods’",
    "section": "6 Nearest Neighbour Analysis",
    "text": "6 Nearest Neighbour Analysis\nIn this section, we will perform the Clark-Evans test of aggregation for a spatial point pattern by using [*clarkevans.test()*](https://www.rdocumentation.org/packages/spatstat/versions/1.63-3/topics/clarkevans.test) of **statspat**.\n\nThe test hypotheses are:\n\nHo = The distribution of childcare services are randomly distributed.\n\nH1= The distribution of childcare services are not randomly distributed.\n\nThe 95% confident interval will be used.\n\nTesting spatial point patterns using Clark and Evans Test\nUsing childcareSG_PPP ’\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.55631, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nUsing childcare_ck_ppp\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.90679, p-value = 0.1637\nalternative hypothesis: two-sided\n\n\n\n\nClark and Evans Test:Tampines planning area\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.79782, p-value = 0.0002432\nalternative hypothesis: two-sided\n\n\nTO BE COMPLETED",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 1) ‘1st Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_02.html",
    "href": "hands-on-exercise/ex03/hands-on-ex03_02.html",
    "title": "03 (Part 2) ‘2nd Order Spatial Point Patterns Analysis Methods’",
    "section": "",
    "text": "This is the Part 2 of the Point Pattern Analysis\nSame data will be used as Hands-on Exercise 3 (Part 1), namely:",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 2) ‘2nd Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_02.html#importing-packages-and-data",
    "href": "hands-on-exercise/ex03/hands-on-ex03_02.html#importing-packages-and-data",
    "title": "03 (Part 2) ‘2nd Order Spatial Point Patterns Analysis Methods’",
    "section": "1 Importing Packages and Data",
    "text": "1 Importing Packages and Data\n\npacman::p_load(sf, spatstat, raster, tmap, rvest, tidyverse)\n\n\n# childcare services data\nchildcare_sf &lt;- st_read(dsn=\"data/geospatial/child-care-services-geojson.geojson\")\n\n# coastal outline data\nsg_sf &lt;- st_read(dsn=\"data/geospatial\", layer=\"CostalOutline\")\n\n# master plan subzone boundary data\nmpsz_sf &lt;- st_read(dsn=\"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\n# notice childcare_sf is in WGS84, transform it into SV21:\nchildcare_sf &lt;- childcare_sf %&gt;% st_transform(crs=3414)\n\n\n# childcare_sf\n# sg_sf\n# mpsz_sf\n\n\n# sg_sf # need to set CRS, no need transform\n# mpsz_sf # need to set CRS, no need transform\n\n\n# change CRS to EPSG:3414\nst_crs(sg_sf) &lt;- 3414\nst_crs(mpsz_sf) &lt;- 3414\n\nst_crs(sg_sf) # need to set CRS, no need transform\nst_crs(mpsz_sf) # need to set CRS, no need transform\n\n\nGeospatial Data Wrangling\n\nchildcare_ppp &lt;- \n  as.ppp(st_coordinates(childcare_sf), \n         st_bbox(childcare_sf)) %&gt;% \n  unmark()\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\n\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 11 decimal places\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n\n# any(duplicated(childcare_ppp))\n# sum(duplicated(childcare_ppp))\n# multiplicity(childcare_ppp)\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 128\n\n\n\ntmap_mode('view')\ntm_shape(childcare_sf) +\n  tm_dots(alpha=0.5, \n          size=0.05)\n\n\n\n\ntmap_mode('plot')\n\n\n# jittering, which will add a small perturbation to the duplicate points so that they do not occupy the exact same space.\nchildcare_ppp_jit &lt;- \n  rjitter(childcare_ppp, \n  retry=TRUE, \n  nsim=1, \n  drop=TRUE)\n\n\n# check for any duplicated points\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\nsum(duplicated(childcare_ppp_jit))\n\n[1] 0\n\n# multiplicity(childcare_ppp_jit)\nsum(multiplicity(childcare_ppp_jit) &gt; 1)\n\n[1] 0\n\n\n\n\nCreate SG Owin object (Window) to Extract Regional PPP\n\nsg_owin &lt;- as.owin(sg_sf)\nplot(sg_owin)\n\n\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\n# Combines point events object and Owin object \n# Extract only childcare point events within Singapore's boundaries\nchildcareSG_ppp &lt;- childcare_ppp_jit[sg_owin]\n\n## Observe, any difference?\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n\nchildcareSG_ppp\n\nPlanar point pattern: 1545 points\nwindow: polygonal boundary\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n\nclass(childcare_ppp)\n\n[1] \"ppp\"\n\nclass(childcareSG_ppp)\n\n[1] \"ppp\"\n\n\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.129929e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nWindow: polygonal boundary\n50 separate polygons (1 hole)\n                 vertices         area relative.area\npolygon 1 (hole)       30     -7081.18     -9.76e-06\npolygon 2              55     82537.90      1.14e-04\npolygon 3              90    415092.00      5.72e-04\npolygon 4              49     16698.60      2.30e-05\npolygon 5              38     24249.20      3.34e-05\npolygon 6             976  23344700.00      3.22e-02\npolygon 7             721   1927950.00      2.66e-03\npolygon 8            1992   9992170.00      1.38e-02\npolygon 9             330   1118960.00      1.54e-03\npolygon 10            175    925904.00      1.28e-03\npolygon 11            115    928394.00      1.28e-03\npolygon 12             24      6352.39      8.76e-06\npolygon 13            190    202489.00      2.79e-04\npolygon 14             37     10170.50      1.40e-05\npolygon 15             25     16622.70      2.29e-05\npolygon 16             10      2145.07      2.96e-06\npolygon 17             66     16184.10      2.23e-05\npolygon 18           5195 636837000.00      8.78e-01\npolygon 19             76    312332.00      4.31e-04\npolygon 20            627  31891300.00      4.40e-02\npolygon 21             20     32842.00      4.53e-05\npolygon 22             42     55831.70      7.70e-05\npolygon 23             67   1313540.00      1.81e-03\npolygon 24            734   4690930.00      6.47e-03\npolygon 25             16      3194.60      4.40e-06\npolygon 26             15      4872.96      6.72e-06\npolygon 27             15      4464.20      6.15e-06\npolygon 28             14      5466.74      7.54e-06\npolygon 29             37      5261.94      7.25e-06\npolygon 30            111    662927.00      9.14e-04\npolygon 31             69     56313.40      7.76e-05\npolygon 32            143    145139.00      2.00e-04\npolygon 33            397   2488210.00      3.43e-03\npolygon 34             90    115991.00      1.60e-04\npolygon 35             98     62682.90      8.64e-05\npolygon 36            165    338736.00      4.67e-04\npolygon 37            130     94046.50      1.30e-04\npolygon 38             93    430642.00      5.94e-04\npolygon 39             16      2010.46      2.77e-06\npolygon 40            415   3253840.00      4.49e-03\npolygon 41             30     10838.20      1.49e-05\npolygon 42             53     34400.30      4.74e-05\npolygon 43             26      8347.58      1.15e-05\npolygon 44             74     58223.40      8.03e-05\npolygon 45            327   2169210.00      2.99e-03\npolygon 46            177    467446.00      6.44e-04\npolygon 47             46    699702.00      9.65e-04\npolygon 48              6     16841.00      2.32e-05\npolygon 49             13     70087.30      9.66e-05\npolygon 50              4      9459.63      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\n\nplot(childcareSG_ppp)\n\n\n\n\n\n\n\n\n\n# Extract Planning Areas\npg &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n\n\nplot(pg, main=\"OVERVIEW OF PUNGGOL DATA\")\n\n\n\n\n\n\n\nplot(tm, main = \"Tampines\")\n\n\n\n\n\n\n\nplot(ck, main = \"Choa Chu Kang\")\n\n\n\n\n\n\n\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n\n\n\n# Convert into Owin objects (to extract PPP for each planning areas):\npg_owin = as.owin(pg)\ntm_owin = as.owin(tm)\nck_owin = as.owin(ck)\njw_owin = as.owin(jw)\n\nclass(pg_owin)\n\n[1] \"owin\"\n\nclass(tm_owin)\n\n[1] \"owin\"\n\nclass(ck_owin)\n\n[1] \"owin\"\n\nclass(jw_owin)\n\n[1] \"owin\"\n\n\n\n# After selecting the Owin object, we can extract ppp within Owin object.\nchildcare_pg_ppp = childcare_ppp_jit[pg_owin]\nchildcare_tm_ppp = childcare_ppp_jit[tm_owin]\nchildcare_ck_ppp = childcare_ppp_jit[ck_owin]\nchildcare_jw_ppp = childcare_ppp_jit[jw_owin]\n\n\n# Transform by 1000 times, from m to km, for KDE later\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\n\n# Display plot overview\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 2) ‘2nd Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_02.html#analysing-spatial-point-process-using-g-function",
    "href": "hands-on-exercise/ex03/hands-on-ex03_02.html#analysing-spatial-point-process-using-g-function",
    "title": "03 (Part 2) ‘2nd Order Spatial Point Patterns Analysis Methods’",
    "section": "2 Analysing Spatial Point Process Using G-Function",
    "text": "2 Analysing Spatial Point Process Using G-Function\n\nChoa Chu Kang planning area\n\nNearest Neighbour Distance Function G\nThe G function measures the distribution of the distances from an arbitrary event to its nearest event. In this section, you will learn how to compute G-function estimation by using Gest() of spatstat package. You will also learn how to perform monta carlo simulation test using envelope() of spatstat package.\nGest(X, r=NULL, breaks=NULL, …,\n    correction=c(“rs”, “km”, “han”),\n    domain=NULL)\n\n# Compute G function, using Gest() of spatat package\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500), main=\"G-Function, Choa Chu Kang\")\n\n\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nMonte Carlo test with G-function\n\nG_CK.csr &lt;- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\n\nplot(G_CK.csr)\n\n\n\n\n\n\n\n\n\n\n\nTampines planning area\n\nNearest Neighbour Distance Function G\n\nG_tm = Gest(childcare_tm_ppp, correction = \"all\")\nplot(G_tm)\n\n\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed.\nThe null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nG_tm.csr &lt;- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\n\nplot(G_tm.csr)",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 2) ‘2nd Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_02.html#analysing-spatial-point-process-using-f-function",
    "href": "hands-on-exercise/ex03/hands-on-ex03_02.html#analysing-spatial-point-process-using-f-function",
    "title": "03 (Part 2) ‘2nd Order Spatial Point Patterns Analysis Methods’",
    "section": "3 Analysing Spatial Point Process Using F-Function",
    "text": "3 Analysing Spatial Point Process Using F-Function\n\nChoa Chu Kang planning area\n\nEstimate the Empty Space Function or its Hazard Rate Function F(r) or h(r)\nThe F function estimates the empty space function F(r) or its hazard rate h(r) from a point pattern in a window of arbitrary shape. In this section, you will learn how to compute F-function estimation by using Fest() of spatstat package. You will also learn how to perform monta carlo simulation test using envelope() of spatstat package.\nFest(X, …, eps, r=NULL, breaks=NULL,\n    correction=c(“rs”, “km”, “cs”),\n    domain=NULL)\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nMonte Carlo test with F-fucntion\n\nF_CK.csr &lt;- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\n\nplot(F_CK.csr)\n\n\n\n\n\n\n\n\n\n\n\nTampines planning area\n\nEstimate the Empty Space Function or its Hazard Rate Function F(r) or h(r)\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed.\nThe null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nF_tm.csr &lt;- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\n\nplot(F_tm.csr)",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 2) ‘2nd Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_02.html#summary",
    "href": "hands-on-exercise/ex03/hands-on-ex03_02.html#summary",
    "title": "03 (Part 2) ‘2nd Order Spatial Point Patterns Analysis Methods’",
    "section": "Summary",
    "text": "Summary\nEstimate Functions we went through:\n\nGest(), Fest(), Kest(), Lest()\nThe G function measures the distribution of the distances from an arbitrary event to its nearest event.\nThe F function estimates the empty space function F(r) or its hazard rate h(r) from a point pattern in a window of arbitrary shape.\nK-function measures the number of events found up to a given distance of any particular event\nThe command Lest first calls Kest to compute the estimate of the K-function, and then applies the square root transformation. The transformation to LL was proposed by Besag (1977).\n\nFollowed by a Complete Spatial Randomness Test:\n\nIf the data exhibits complete spatial randomness, this implies that there is no underlying structure in the data.\nfirst compute simulation envelopes of a summary function.\nTO BE STUDIED",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 2) ‘2nd Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_02.html#analysing-spatial-point-process-using-k-function",
    "href": "hands-on-exercise/ex03/hands-on-ex03_02.html#analysing-spatial-point-process-using-k-function",
    "title": "03 (Part 2) ‘2nd Order Spatial Point Patterns Analysis Methods’",
    "section": "4 Analysing Spatial Point Process Using K-Function",
    "text": "4 Analysing Spatial Point Process Using K-Function\nK-function measures the number of events found up to a given distance of any particular event. In this section, you will learn how to compute K-function estimates by using Kest() of spatstat package. You will also learn how to perform monta carlo simulation test using envelope() of spatstat package.\n Kest(X, …, r=NULL, rmax=NULL, breaks=NULL,\n    correction=c(“border”, “isotropic”, “Ripley”, “translate”),\n   nlarge=3000, domain=NULL, var.approx=FALSE, ratio=FALSE)\n\nChoa Chu Kang planning area\n\nEstimate K-Function\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nK_ck.csr &lt;- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n\n\n\n\nTampines planning area\n\nEstimate K-Function\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nK_tm.csr &lt;- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 2) ‘2nd Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "hands-on-exercise/ex03/hands-on-ex03_02.html#analysing-spatial-point-process-using-l-function",
    "href": "hands-on-exercise/ex03/hands-on-ex03_02.html#analysing-spatial-point-process-using-l-function",
    "title": "03 (Part 2) ‘2nd Order Spatial Point Patterns Analysis Methods’",
    "section": "5 Analysing Spatial Point Process Using L-Function",
    "text": "5 Analysing Spatial Point Process Using L-Function\nIn this section, you will learn how to compute L-function estimation by using Lest() of spatstat package. You will also learn how to perform monta carlo simulation test using envelope() of spatstat package.\n\nChoa Chu Kang planning area\n\nEstimate L Function\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\nThe null hypothesis will be rejected if p-value if smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nL_ck.csr &lt;- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\n\n\n\nTampines planning area\n\nEstimate L Function\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nThe code chunk below will be used to perform the hypothesis testing.\n\nL_tm.csr &lt;- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))",
    "crumbs": [
      "Home",
      "Hands-on Exercises",
      "03 (Part 2) ‘2nd Order Spatial Point Pattern Analysis’"
    ]
  },
  {
    "objectID": "in-class-exercise/ex03/in-class-ex03.html",
    "href": "in-class-exercise/ex03/in-class-ex03.html",
    "title": "03 In-class Exercise 3 (Review)",
    "section": "",
    "text": "Review on Spatial Point Patterns in Real World\nDistribution of diseases such as dengue fever – note recorded based on homeaddress, not where you’ve bitten\nDistribution of car collisions (traffic accidents) – note recorded on-site\nDistribution of education institution\nDistribution of social media data such as tweets through web crawling, and signal is from the celltower, not very exact.\nAlways take note:\n\nAlways know where the source of your data is from.\nYou cannot take a sample from the population from spatial point events and analyse it.\nYou can get a complete subset like “kindergarten” from a subset of “childcare centre”, but you cannot do a random sampling out of “kindergarten” like when you do usual statistical analysis.\n\nWhat we want to know:\nIs the point even randomly distributed? Almost never will we get random distribution in the real world, unless you are doing a very micro-scale study.\n\n\n\nTypes of spatial points analysis:\n– 1st order: exploratory data analysis – visualise data points – 2nd order:\nWe are not able to objectively visualise the intensity on a map (interpretation can change depending on how big your points are). To do so objectively one method is to use Kernal Density Estimation(KDE).\nWhy analysis? Using KDE:\n– We are determining spatial distribution of poins are Either random or not random. – If not random, either clustered or uniform (dispersed)\n\n\n\nFixed Bandwidths – we can fixed search radius for our KDE, but this is not always realistic.\nAdaptive Bandwidths – More realistically, we know that not every place has the same geographical/physical size. Tampines is larger than Choa Chu Kang, do you use the same search distance for both area and determine the density, or use a larger bandwidth for Tampines and smaller for Choa Chu Kang?\n– Having different bandwidths, which one is accurate? They are all accurate! – Interpretation? Which one best shows you the most appropriate interpretation?\n\n\n\n\n\nKernal Interpolation.. Note the differences between Quartic and Gaussian - They are similar, but they give different results - Gaussian may result in negative results (e.g. -1.0 kernel density estimation for childcare -&gt; doesn’t make sense realistically) - If you want to avoid negative results, but want to use a normal-distributinon-like interpolation function, use Quartic instead.\n\n\n\nTo declare whether the points events are random, we say:\n\nNull Hypothesis, H0 = Observed point process (or point events) resemble complete Spatial Random Distribution.\nAlternative Hypothesis, H1 = Observed point process (or point events) do not resemble complete Spatial Random Distribution.\n\nHomogenous distribution–complete spatial randomness–is an ‘ideal’ situation. It should not happen. If we happen to not have enough evidence to reject the null hypothesis, it does not mean the null hypothesis is correct. It simply means our evidence is not enough – either error in sampling, or sampling size is too small such that it does not represent the population.\n\n\n\nWhat is this “population” that we are comparing with? We basically do a Monte Carlo simulation (multiple simulations) to come up with a spatially randomly distributed point events within our study region.\n– For each simulated point pattern, estimate G(r) and use the maximum (95th) and minimum (5th) of these functions for the simulated patterns to define an upper and lower simulation envelope. (the max and min can be varied, need not be 95%)\n– If the estimated G(r) lies above the upper envelope or below the lower envelope, the estimated G(r) is statistically significant.\n\n\n\nIn spatstat’s simulations, minimum number of simulation for 95% confidence is 40 (R counts from 0, use 39 in code) simulations. (according to spatstat’s documentation):\n\nHaving larger number of sampling increases our confidence in the final result.\nUsually it’s easier to remember and cleaner to use a easier to read number like 99 (which produces 100 simulations)\nRemember to always use a seed value for the random generation, so that you get a reproduceable result.\nYou just need to set a seed for all algorithms that deals with randomness at the top of the document, no need to repeat it for every code chunk.\n\n\n\n\nBefore you begin your analysis, always set your Confidence Interval – 90%, 95%, 99%. This will help to determine the alpha value for your analysis, where alpha = 1 - (confidence interval/100)\n\nWhy? Note that not everything is certain in the real world, you have to know that there is a limit where we can no longer be confident in our result.\np-value by itself does not mean anything other than the probability of the occurrence of a given event. This probability has to be significantly higher (or lower) than a certain value (in here, the alpha value) to be determined significant.\n\n\n\n\n\n\nGrey Zone indicates the confidence envelop (95%), and anything that falls within we are not confident that point spatial distribution is not random.\nThe red diagonal line (break line) separates at 50% the upper confidence envelope and lower confidence envelope.\nOutside the Grey Zone, if – In above break line, then there are signs of clustering – In below break line, then there are signs of uniform distribution\nNote we also look out for from which distance to which distance where we are confident clustering occurs.\n\nGenerally, we use G and K estimation functions (similar to K is L function, which is a standardised function of K), do you know why? TO BE COMPLETED\n– Extra Notes: L function is a transformation of K function. We divide by pi (as each study area is a circle), we further subtract away the radius of each study area to straighten the break line into a straight line. – Extra Notes: Difference between G and K:\n\nBoth functions are zonal, they search a radius around each point.\nG function uses a fixed set of radius (fixed bandwidth)\nK function uses a search radius relative to surrounding points, e.g. the nearest point is 100m away, the first search is 100m around point, the next nearest point is 200m away, we do a search 200m around point.",
    "crumbs": [
      "Home",
      "In-class Exercises",
      "03 In-class Exercise 3 (Review)"
    ]
  },
  {
    "objectID": "in-class-exercise/ex03/in-class-ex03.html#in-class",
    "href": "in-class-exercise/ex03/in-class-ex03.html#in-class",
    "title": "03 Exercise Review 3",
    "section": "",
    "text": "Review on Spatial Point Patterns in Real World\nDistribution of diseases such as dengue fever – note recorded based on homeaddress, not where you’ve bitten\nDistribution of car collisions (traffic accidents) – note recorded on-site\nDistribution of education institution\nDistribution of social media data such as tweets through web crawling, and signal is from the celltower, not very exact.\nAlways take note:\n\nAlways know where the source of your data is from.\nYou cannot take a sample from the population from spatial point events and analyse it.\nYou can get a complete subset like “kindergarten” from a subset of “childcare centre”, but you cannot do a random sampling out of “kindergarten” like when you do usual statistical analysis.\n\nWhat we want to know:\nIs the point even randomly distributed? Almost never will we get random distribution in the real world, unless you are doing a very micro-scale study.\nTypes of spatial points:\n– 1st order: exploratory data analysis – visualise data points – 2nd order:\nWe are not able to objectively visualise the intensity on a map (interpretation can change depending on how big your points are). To do so objectively one method is to use Kernal Density Estimation(KDE).\nFrom KDE:\n– Either random or not random. – If not random, either clustered or uniform (dispersed)\nKDE:\nFixed Bandwidths Adaptive Bandwidths – Not every place has the same geographical/physical size. Tampines is larger than Choa Chu Kang, do you use the same search distance for both area and determine the density, or use a larger bandwidth for Tampines and smaller for Choa Chu Kang?\n– Having different bandwidths, which one is accurate? They are all accurate! – Interpretation? Which one best shows you the most appropriate interpretation?",
    "crumbs": [
      "Home",
      "In-class Exercises",
      "03 Exercise Review 3"
    ]
  },
  {
    "objectID": "in-class-exercise/ex03/in-class-ex03.html#in-class-review",
    "href": "in-class-exercise/ex03/in-class-ex03.html#in-class-review",
    "title": "03 Exercise Review 3",
    "section": "",
    "text": "Review on Spatial Point Patterns in Real World\nDistribution of diseases such as dengue fever – note recorded based on homeaddress, not where you’ve bitten\nDistribution of car collisions (traffic accidents) – note recorded on-site\nDistribution of education institution\nDistribution of social media data such as tweets through web crawling, and signal is from the celltower, not very exact.\nAlways take note:\n\nAlways know where the source of your data is from.\nYou cannot take a sample from the population from spatial point events and analyse it.\nYou can get a complete subset like “kindergarten” from a subset of “childcare centre”, but you cannot do a random sampling out of “kindergarten” like when you do usual statistical analysis.\n\nWhat we want to know:\nIs the point even randomly distributed? Almost never will we get random distribution in the real world, unless you are doing a very micro-scale study.\n\n\n\nTypes of spatial points analysis:\n– 1st order: exploratory data analysis – visualise data points – 2nd order:\nWe are not able to objectively visualise the intensity on a map (interpretation can change depending on how big your points are). To do so objectively one method is to use Kernal Density Estimation(KDE).\nWhy analysis? Using KDE:\n– We are determining spatial distribution of poins are Either random or not random. – If not random, either clustered or uniform (dispersed)\n\n\n\nFixed Bandwidths – we can fixed search radius for our KDE, but this is not always realistic.\nAdaptive Bandwidths – More realistically, we know that not every place has the same geographical/physical size. Tampines is larger than Choa Chu Kang, do you use the same search distance for both area and determine the density, or use a larger bandwidth for Tampines and smaller for Choa Chu Kang?\n– Having different bandwidths, which one is accurate? They are all accurate! – Interpretation? Which one best shows you the most appropriate interpretation?\n\n\n\n\n\nKernal Interpolation.. Note the differences between Quartic and Gaussian - They are similar, but they give different results - Gaussian may result in negative results (e.g. -1.0 kernel density estimation for childcare -&gt; doesn’t make sense realistically) - If you want to avoid negative results, but want to use a normal-distributinon-like interpolation function, use Quartic instead.\n\n\n\nTo declare whether the points events are random, we say:\n\nNull Hypothesis, H0 = Observed point process (or point events) resemble complete Spatial Random Distribution.\nAlternative Hypothesis, H1 = Observed point process (or point events) do not resemble complete Spatial Random Distribution.\n\nHomogenous distribution–complete spatial randomness–is an ‘ideal’ situation. It should not happen. If we happen to not have enough evidence to reject the null hypothesis, it does not mean the null hypothesis is correct. It simply means our evidence is not enough – either error in sampling, or sampling size is too small such that it does not represent the population.\n\n\n\nWhat is this “population” that we are comparing with? We basically do a Monte Carlo simulation (multiple simulations) to come up with a spatially randomly distributed point events within our study region.\n– For each simulated point pattern, estimate G(r) and use the maximum (95th) and minimum (5th) of these functions for the simulated patterns to define an upper and lower simulation envelope. (the max and min can be varied, need not be 95%)\n– If the estimated G(r) lies above the upper envelope or below the lower envelope, the estimated G(r) is statistically significant.\n\n\n\nIn spatstat’s simulations, minimum number of simulation for 95% confidence is 40 (R counts from 0, use 39 in code) simulations. (according to spatstat’s documentation):\n\nHaving larger number of sampling increases our confidence in the final result.\nUsually it’s easier to remember and cleaner to use a easier to read number like 99 (which produces 100 simulations)\nRemember to always use a seed value for the random generation, so that you get a reproduceable result.\nYou just need to set a seed for all algorithms that deals with randomness at the top of the document, no need to repeat it for every code chunk.\n\n\n\n\nBefore you begin your analysis, always set your Confidence Interval – 90%, 95%, 99%. This will help to determine the alpha value for your analysis, where alpha = 1 - (confidence interval/100)\n\nWhy? Note that not everything is certain in the real world, you have to know that there is a limit where we can no longer be confident in our result.\np-value by itself does not mean anything other than the probability of the occurrence of a given event. This probability has to be significantly higher (or lower) than a certain value (in here, the alpha value) to be determined significant.\n\n\n\n\n\n\nGrey Zone indicates the confidence envelop (95%), and anything that falls within we are not confident that point spatial distribution is not random.\nThe red diagonal line (break line) separates at 50% the upper confidence envelope and lower confidence envelope.\nOutside the Grey Zone, if – In above break line, then there are signs of clustering – In below break line, then there are signs of uniform distribution\nNote we also look out for from which distance to which distance where we are confident clustering occurs.\n\nGenerally, we use G and K estimation functions (similar to K is L function, which is a standardised function of K), do you know why? TO BE COMPLETED\n– Extra Notes: L function is a transformation of K function. We divide by pi (as each study area is a circle), we further subtract away the radius of each study area to straighten the break line into a straight line. – Extra Notes: Difference between G and K:\n\nBoth functions are zonal, they search a radius around each point.\nG function uses a fixed set of radius (fixed bandwidth)\nK function uses a search radius relative to surrounding points, e.g. the nearest point is 100m away, the first search is 100m around point, the next nearest point is 200m away, we do a search 200m around point.",
    "crumbs": [
      "Home",
      "In-class Exercises",
      "03 Exercise Review 3"
    ]
  },
  {
    "objectID": "in-class-exercise/ex03/in-class-ex03.html#in-class-review-5-items",
    "href": "in-class-exercise/ex03/in-class-ex03.html#in-class-review-5-items",
    "title": "03 In-class Exercise 3 (Review)",
    "section": "",
    "text": "Review on Spatial Point Patterns in Real World\nDistribution of diseases such as dengue fever – note recorded based on homeaddress, not where you’ve bitten\nDistribution of car collisions (traffic accidents) – note recorded on-site\nDistribution of education institution\nDistribution of social media data such as tweets through web crawling, and signal is from the celltower, not very exact.\nAlways take note:\n\nAlways know where the source of your data is from.\nYou cannot take a sample from the population from spatial point events and analyse it.\nYou can get a complete subset like “kindergarten” from a subset of “childcare centre”, but you cannot do a random sampling out of “kindergarten” like when you do usual statistical analysis.\n\nWhat we want to know:\nIs the point even randomly distributed? Almost never will we get random distribution in the real world, unless you are doing a very micro-scale study.\n\n\n\nTypes of spatial points analysis:\n– 1st order: exploratory data analysis – visualise data points – 2nd order:\nWe are not able to objectively visualise the intensity on a map (interpretation can change depending on how big your points are). To do so objectively one method is to use Kernal Density Estimation(KDE).\nWhy analysis? Using KDE:\n– We are determining spatial distribution of poins are Either random or not random. – If not random, either clustered or uniform (dispersed)\n\n\n\nFixed Bandwidths – we can fixed search radius for our KDE, but this is not always realistic.\nAdaptive Bandwidths – More realistically, we know that not every place has the same geographical/physical size. Tampines is larger than Choa Chu Kang, do you use the same search distance for both area and determine the density, or use a larger bandwidth for Tampines and smaller for Choa Chu Kang?\n– Having different bandwidths, which one is accurate? They are all accurate! – Interpretation? Which one best shows you the most appropriate interpretation?\n\n\n\n\n\nKernal Interpolation.. Note the differences between Quartic and Gaussian - They are similar, but they give different results - Gaussian may result in negative results (e.g. -1.0 kernel density estimation for childcare -&gt; doesn’t make sense realistically) - If you want to avoid negative results, but want to use a normal-distributinon-like interpolation function, use Quartic instead.\n\n\n\nTo declare whether the points events are random, we say:\n\nNull Hypothesis, H0 = Observed point process (or point events) resemble complete Spatial Random Distribution.\nAlternative Hypothesis, H1 = Observed point process (or point events) do not resemble complete Spatial Random Distribution.\n\nHomogenous distribution–complete spatial randomness–is an ‘ideal’ situation. It should not happen. If we happen to not have enough evidence to reject the null hypothesis, it does not mean the null hypothesis is correct. It simply means our evidence is not enough – either error in sampling, or sampling size is too small such that it does not represent the population.\n\n\n\nWhat is this “population” that we are comparing with? We basically do a Monte Carlo simulation (multiple simulations) to come up with a spatially randomly distributed point events within our study region.\n– For each simulated point pattern, estimate G(r) and use the maximum (95th) and minimum (5th) of these functions for the simulated patterns to define an upper and lower simulation envelope. (the max and min can be varied, need not be 95%)\n– If the estimated G(r) lies above the upper envelope or below the lower envelope, the estimated G(r) is statistically significant.\n\n\n\nIn spatstat’s simulations, minimum number of simulation for 95% confidence is 40 (R counts from 0, use 39 in code) simulations. (according to spatstat’s documentation):\n\nHaving larger number of sampling increases our confidence in the final result.\nUsually it’s easier to remember and cleaner to use a easier to read number like 99 (which produces 100 simulations)\nRemember to always use a seed value for the random generation, so that you get a reproduceable result.\nYou just need to set a seed for all algorithms that deals with randomness at the top of the document, no need to repeat it for every code chunk.\n\n\n\n\nBefore you begin your analysis, always set your Confidence Interval – 90%, 95%, 99%. This will help to determine the alpha value for your analysis, where alpha = 1 - (confidence interval/100)\n\nWhy? Note that not everything is certain in the real world, you have to know that there is a limit where we can no longer be confident in our result.\np-value by itself does not mean anything other than the probability of the occurrence of a given event. This probability has to be significantly higher (or lower) than a certain value (in here, the alpha value) to be determined significant.\n\n\n\n\n\n\nGrey Zone indicates the confidence envelop (95%), and anything that falls within we are not confident that point spatial distribution is not random.\nThe red diagonal line (break line) separates at 50% the upper confidence envelope and lower confidence envelope.\nOutside the Grey Zone, if – In above break line, then there are signs of clustering – In below break line, then there are signs of uniform distribution\nNote we also look out for from which distance to which distance where we are confident clustering occurs.\n\nGenerally, we use G and K estimation functions (similar to K is L function, which is a standardised function of K), do you know why? TO BE COMPLETED\n– Extra Notes: L function is a transformation of K function. We divide by pi (as each study area is a circle), we further subtract away the radius of each study area to straighten the break line into a straight line. – Extra Notes: Difference between G and K:\n\nBoth functions are zonal, they search a radius around each point.\nG function uses a fixed set of radius (fixed bandwidth)\nK function uses a search radius relative to surrounding points, e.g. the nearest point is 100m away, the first search is 100m around point, the next nearest point is 200m away, we do a search 200m around point.",
    "crumbs": [
      "Home",
      "In-class Exercises",
      "03 In-class Exercise 3 (Review)"
    ]
  },
  {
    "objectID": "in-class-exercise/ex03/in-class-ex03.html#in-class-exercise",
    "href": "in-class-exercise/ex03/in-class-ex03.html#in-class-exercise",
    "title": "03 In-class Exercise 3 (Review)",
    "section": "2 In Class Exercise",
    "text": "2 In Class Exercise\n\nImporting Packages\n\npacman::p_load(tidyverse, sf, spatstat, tmap, rvest, maptools)\n\n\nIssue 1: Installing maptools\nNote that maptools is retired, so we have issues converting from simplefeatures object to spatstat’s ppp object. For subsequent use, don’t re-install everytime, include ‘eval: false’ once installed.\n\ninstall.packages(\"maptools\",\n                 repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\n\n\nImport Data set\n\n# childcare services data\nchildcare_sf &lt;- st_read(dsn=\"data/geospatial/child-care-services-geojson.geojson\")\n\n# masterplan subzone data\nmpsz_sf &lt;- st_read(dsn=\"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nIssue 2: Getting Coastal Outline using Subzone Layer\nIn sf package, there are two methods to combine multiple sf features into one simple feature object.\n\nst_combine() – combine without unioning or resolving internal boundaries\nst_union() – combine and remove all itnernal boundaries\n\nAlways note that the data we want is not always provided in the most suitable form or format. Therefore, we should always look into manipulating and ‘massaging’ our data to extract whatever useful information we need.\n\nsg_sf &lt;- mpsz_sf %&gt;% st_union()\nsg_sf\n\nGeometry set for 1 feature \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n\nData Wrangling\n\n# Ensure all data sets are in the same CRS throughout\n\nst_transform(childcare_sf, crs = 3414)\n\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11203.01 ymin: 25667.6 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     Name\n1   kml_1\n2   kml_2\n3   kml_3\n4   kml_4\n5   kml_5\n6   kml_6\n7   kml_7\n8   kml_8\n9   kml_9\n10 kml_10\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Description\n1                     &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;760742&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;742, YISHUN AVENUE 5, #01 - 470, SINGAPORE 760742&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;AVERBEL CHILD DEVELOPMENT CENTRE PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;AEA27114446235CE&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n2                                                        &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;159053&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;20, LENGKOK BAHRU, #02 - 05, SINGAPORE 159053&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;AWWA LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;86B24416FB1663C6&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n3                            &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;556912&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;22, LI HWAN VIEW, GOLDEN HILL ESTATE, SINGAPORE 556912&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;BABIES BY-THE-PARK PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;F971CBBA973E1AE5&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n4                     &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;569139&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;3, ANG MO KIO STREET 62, #01 - 36, LINK@AMK, SINGAPORE 569139&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;Baby Elk Infant Care Pte Ltd&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;86A4F25D1C7C9D85&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n5                                               &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;467961&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;22A, KEW DRIVE, SINGAPORE 467961&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;BABYPLANET MONTESSORI PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;CFE3F056F8171C7B&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n6                                           &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;598523&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;3 Jalan Kakatua, JURONG PARK, SINGAPORE 598523&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;BAMBINI CHILDCARE LLP&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;2B4F0B285ED28C4A&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n7                              &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;160131&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;131, JALAN BUKIT MERAH, #01 - 1591, SINGAPORE 160131&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;BAMBINI MONTESSORI PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;F62A225197813BBD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n8                        &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;543319&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;319C, ANCHORVALE DRIVE, #01 - 66, SINGAPORE 543319&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;BERRY TREE PRESCHOOL PRIVATE LIMITED&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;AE242159867D5EB2&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n9  &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;750511&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;511, CANBERRA ROAD, #03 - 02, SEMBAWANG MART, SINGAPORE 750511&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;BERRY TREE PRESCHOOL@SEMBAWANG PRIVATE LIMITED&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;C1456F97A17ED64A&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n10                    &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;823195&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;195C, PUNGGOL ROAD, #01 - 532, THE PERIWINKLE, SINGAPORE 823195&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;BERRY TREE@PUNGGOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;4F6A8FCA467C3437&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20200826094036&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n                        geometry\n1   POINT Z (27976.73 45716.7 0)\n2     POINT Z (25824 29900.09 0)\n3  POINT Z (31399.04 37416.36 0)\n4   POINT Z (29268.43 40942.1 0)\n5  POINT Z (41217.74 33554.94 0)\n6  POINT Z (20644.07 36118.78 0)\n7  POINT Z (27427.95 29182.36 0)\n8  POINT Z (34378.47 41423.03 0)\n9  POINT Z (26467.04 48384.34 0)\n10 POINT Z (36173.81 42550.33 0)\n\nst_transform(mpsz_sf, crs = 3414)\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\nst_transform(sg_sf, crs = 3414)\n\nGeometry set for 1 feature \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\n\n\n\nst_crs(mpsz_sf) &lt;- 3414\nst_crs(childcare_sf) &lt;- 3414\nst_crs(sg_sf) &lt;- 3414\n\n\n\nIssue 3: Conflicts with Maptools\n\ngridded_kde_childcareSG_bw &lt;- maptools::as.SpatialGridDataFrame.im(kde_childcareSG.bw) \n# this uses maptools, use maptools::as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)",
    "crumbs": [
      "Home",
      "In-class Exercises",
      "03 In-class Exercise 3 (Review)"
    ]
  },
  {
    "objectID": "in-class-exercise/ex03/in-class-ex03.html#briefing-on-take-home-exercise-01",
    "href": "in-class-exercise/ex03/in-class-ex03.html#briefing-on-take-home-exercise-01",
    "title": "03 In-class Exercise 3 (Review)",
    "section": "Briefing on Take-Home Exercise 01",
    "text": "Briefing on Take-Home Exercise 01\nGeospatial Analytics for Social Goods.\nFocus: Myanmar Armed Conflict\n\nacled_sf &lt;- read_csv(\"data/ACLED_Myanmar.csv\")\n\nNote that event_date is recorded as a character filed\nuse this instead:\n\n# Convert into simplefeature, using long,lat as coordinates, source crs=4326, use projected crs = 32647, which is WGS 84 / UTM zone 47N. \n\nacled_sf &lt;- read_csv(\"data/ACLED_Myanmar.csv\") %&gt;%\n  st_as_sf(coords =c(\n    \"longitude\", \"latitude\"),\n    crs=4326) %&gt;%\n    st_transform(crs = 32647) %&gt;%\n    mutate(event_date = dmy(event_date))\n\n\ntmap_mode('plot')\nacled_sf %&gt;%\n  filter(year == 2023 |\n           event_type == \"Political violence\") %&gt;%\n  tm_shape() +\n  tm_dots()\n\n\n\n\n\n\n\ntmap_mode(\"plot\")",
    "crumbs": [
      "Home",
      "In-class Exercises",
      "03 In-class Exercise 3 (Review)"
    ]
  },
  {
    "objectID": "take-home-exercise/ex01/take-home-ex01.html",
    "href": "take-home-exercise/ex01/take-home-ex01.html",
    "title": "01 Take Home Exercise 1",
    "section": "",
    "text": "Data sets:\n\nData Set Columns Information\nData Set Myanmar Overview\nCategories by Event Type: Battles, Explosion/Remote violence, Strategic developments, and Violence against civilians.\nIn terms of study period, students should focus on quarterly armed conflict events from January 2021 until June 2024.\n\nCase Study:\nHistory of Myanmar Armed Conflict:\nCurrent Situation:\nStudy Area:\nFocus and Objective:\nAnalysis Methods Used:",
    "crumbs": [
      "Home",
      "Take Home Exercises",
      "01 Take Home Exercise 1"
    ]
  },
  {
    "objectID": "take-home-exercise/take-home-ex-intro.html",
    "href": "take-home-exercise/take-home-ex-intro.html",
    "title": "00 Take Home Exercise Introduction",
    "section": "",
    "text": "There are three take-home exercises that are due throughout the term. They aim to provide students the opportunities to apply the methods learned in class by working through mini real-world cases. Each take-home exercise is an extension of the hands-on and in-class exercises.",
    "crumbs": [
      "Home",
      "Take Home Exercises",
      "00 Take Home Exercise Introduction"
    ]
  }
]